import tkinter as tk
from tkinter import ttk, messagebox, filedialog
import threading
from typing import Optional, Callable
from tkcalendar import DateEntry
import datetime
import time
import os
import sys
from PIL import Image, ImageTk

def resource_path(relative_path):
    """ Get absolute path to resource, works for dev and for PyInstaller """
    try:
        # PyInstaller creates a temp folder and stores path in _MEIPASS
        base_path = sys._MEIPASS
    except Exception:
        base_path = os.path.abspath(".")

    return os.path.join(base_path, relative_path)


        
class InitialOptionWindow:
    def __init__(self, root: tk.Tk, parent, **kwargs):
        self.root = root
        self.parent = parent
        self.root.title("Buyma 出品 / オプション設定")
        try:
            icon_path = resource_path("assets/images/favicon.ico")
            self.root.iconbitmap(icon_path)
        except tk.TclError:
            print("Warning: Could not load application icon.")
        self.root.geometry("1000x1000")
        self.root.resizable(True, True)
        
        # constants
        self.locations = [
            "",
            "日本>北海道>北海道",
            "日本>青森県>青森県",
            "日本>岩手県>岩手県",
            "日本>宮城県>宮城県",
            "日本>秋田県>秋田県",
            "日本>山形県>山形県",
            "日本>福島県>福島県",
            "日本>茨城県>茨城県",
            "日本>栃木県>栃木県",
            "日本>群馬県>群馬県",
            "日本>埼玉県>埼玉県",
            "日本>千葉県>千葉県",
            "日本>東京都>東京都",
            "日本>神奈川県>神奈川県",
            "日本>新潟県>新潟県",
            "日本>富山県>富山県",
            "日本>石川県>石川県",
            "日本>福井県>福井県",
            "日本>山梨県>山梨県",
            "日本>長野県>長野県",
            "日本>岐阜県>岐阜県",
            "日本>静岡県>静岡県",
            "日本>愛知県>愛知県",
            "日本>三重県>三重県",
            "日本>滋賀県>滋賀県",
            "日本>京都府>京都府",
            "日本>大阪府>大阪府",
            "日本>兵庫県>兵庫県",
            "日本>奈良県>奈良県",
            "日本>和歌山県>和歌山県",
            "日本>鳥取県>鳥取県",
            "日本>島根県>島根県",
            "日本>岡山県>岡山県",
            "日本>広島県>広島県",
            "日本>山口県>山口県",
            "日本>徳島県>徳島県",
            "日本>香川県>香川県",
            "日本>愛媛県>愛媛県",
            "日本>高知県>高知県",
            "日本>福岡県>福岡県",
            "日本>佐賀県>佐賀県",
            "日本>長崎県>長崎県",
            "日本>熊本県>熊本県",
            "日本>大分県>大分県",
            "日本>宮崎県>宮崎県",
            "日本>鹿児島県>鹿児島県",
            "日本>沖縄県>沖縄県",
            "ビーチ/リゾート>グアム",
            "ビーチ/リゾート>サモア",
            "ビーチ/リゾート>タヒチ",
            "ビーチ/リゾート>トンガ",
            "ビーチ/リゾート>バヌアツ",
            "ビーチ/リゾート>フィジー",
            "ビーチ/リゾート>モルディブ",
            "北米>アメリカ合衆国>選択なし",
            "北米>アメリカ合衆国>ニューヨーク",
            "北米>アメリカ合衆国>ロサンジェルス",
            "北米>アメリカ合衆国>ボストン",
            "北米>アメリカ合衆国>シカゴ",
            "北米>アメリカ合衆国>シアトル",
            "北米>アメリカ合衆国>ワシントンD.C.",
            "北米>アメリカ合衆国>サンフランシスコ",
            "北米>アメリカ合衆国>マイアミ",
            "北米>アメリカ合衆国>ラスベガス",
            "北米>アメリカ合衆国>デトロイト",
            "北米>アメリカ合衆国>ハワイ",
            "北米>アメリカ合衆国>サイパン",
            "北米>アラスカ（アメリカ）",
            "北米>カナダ>選択なし",
            "北米>カナダ>バンクーバー",
            "アジア>インド",
            "アジア>インドネシア>選択なし",
            "アジア>インドネシア>バリ",
            "アジア>韓国>選択なし",
            "アジア>韓国>ソウル",
            "アジア>カンボジア",
            "アジア>シンガポール",
            "アジア>スリランカ",
            "アジア>タイ>選択なし",
            "アジア>タイ>バンコク",
            "アジア>タイ>プーケット",
            "アジア>台湾",
            "アジア>中国>選択なし",
            "アジア>中国>上海",
            "アジア>中国>北京",
            "アジア>ネパール",
            "アジア>パキスタン",
            "アジア>フィリピン",
            "アジア>ブータン",
            "アジア>ブルネイ",
            "アジア>ベトナム",
            "アジア>香港",
            "アジア>マカオ",
            "アジア>マレーシア",
            "アジア>ミャンマー",
            "アジア>モンゴル",
            "アジア>ラオス",
            "アジア>その他アジア",
            "ヨーロッパ>アイスランド",
            "ヨーロッパ>アイルランド",
            "ヨーロッパ>イギリス>選択なし",
            "ヨーロッパ>イギリス>ロンドン",
            "ヨーロッパ>イタリア>選択なし",
            "ヨーロッパ>イタリア>ローマ",
            "ヨーロッパ>イタリア>ミラノ",
            "ヨーロッパ>イタリア>フィレンツェ",
            "ヨーロッパ>イタリア>ヴェネチア",
            "ヨーロッパ>エストニア",
            "ヨーロッパ>オーストリア",
            "ヨーロッパ>オランダ",
            "ヨーロッパ>ギリシア",
            "ヨーロッパ>キプロス",
            "ヨーロッパ>クロアチア",
            "ヨーロッパ>スイス",
            "ヨーロッパ>スウェーデン",
            "ヨーロッパ>スペイン>選択なし",
            "ヨーロッパ>スペイン>マドリード",
            "ヨーロッパ>スペイン>バルセロナ",
            "ヨーロッパ>スロバキア",
            "ヨーロッパ>スロベニア",
            "ヨーロッパ>チェコ",
            "ヨーロッパ>デンマーク",
            "ヨーロッパ>ドイツ",
            "ヨーロッパ>ノルウェー",
            "ヨーロッパ>ハンガリー",
            "ヨーロッパ>フィンランド",
            "ヨーロッパ>フランス>選択なし",
            "ヨーロッパ>フランス>パリ",
            "ヨーロッパ>フランス>ニース",
            "ヨーロッパ>フランス>ニューカレドニア",
            "ヨーロッパ>ブルガリア",
            "ヨーロッパ>ベルギー",
            "ヨーロッパ>ポーランド",
            "ヨーロッパ>ボスニア・ヘルツェゴビナ",
            "ヨーロッパ>ポルトガル",
            "ヨーロッパ>マケドニア",
            "ヨーロッパ>セルビア",
            "ヨーロッパ>モンテネグロ",
            "ヨーロッパ>ラトヴィア",
            "ヨーロッパ>リトアニア",
            "ヨーロッパ>ルーマニア",
            "ヨーロッパ>ルクセンブルグ",
            "ヨーロッパ>ロシア",
            "ヨーロッパ>ウクライナ",
            "ヨーロッパ>その他ヨーロッパ",
            "オセアニア>オーストラリア>選択なし",
            "オセアニア>オーストラリア>シドニー",
            "オセアニア>オーストラリア>ケアンズ",
            "オセアニア>オーストラリア>ゴールドコースト",
            "オセアニア>ニュージーランド",
            "中南米>アルゼンチン",
            "中南米>アルバ",
            "中南米>ヴァージン諸島",
            "中南米>ウルグアイ",
            "中南米>エクアドル",
            "中南米>エルサルバドル",
            "中南米>ガイアナ",
            "中南米>ギアナ",
            "中南米>キューバ",
            "中南米>キュラソー",
            "中南米>グアテマラ",
            "中南米>ケイマン諸島",
            "中南米>コスタリカ",
            "中南米>コロンビア",
            "中南米>ジャマイカ",
            "中南米>サン・マンタン",
            "中南米>スリナム",
            "中南米>セント・マーチン",
            "中南米>チリ",
            "中南米>ドミニカ共和国",
            "中南米>トリニダード＆トバゴ",
            "中南米>ニカラグア",
            "中南米>パナマ",
            "中南米>バハマ",
            "中南米>バミューダ",
            "中南米>パラグアイ",
            "中南米>バルバドス",
            "中南米>プエルトリコ",
            "中南米>ブラジル",
            "中南米>ベネズエラ",
            "中南米>ベリーズ",
            "中南米>ペルー",
            "中南米>ボリビア",
            "中南米>ホンジュラス",
            "中南米>マルティニーク",
            "中南米>メキシコ",
            "中南米>その他中南米",
            "中近東/アフリカ>アラブ首長国連邦",
            "中近東/アフリカ>イエメン",
            "中近東/アフリカ>イスラエル",
            "中近東/アフリカ>イラン",
            "中近東/アフリカ>エジプト",
            "中近東/アフリカ>オマーン",
            "中近東/アフリカ>カタール",
            "中近東/アフリカ>クウェート",
            "中近東/アフリカ>サウジアラビア",
            "中近東/アフリカ>シリア",
            "中近東/アフリカ>チュニジア",
            "中近東/アフリカ>トルコ",
            "中近東/アフリカ>バーレーン",
            "中近東/アフリカ>ボツワナ",
            "中近東/アフリカ>南アフリカ",
            "中近東/アフリカ>モロッコ",
            "中近東/アフリカ>ヨルダン",
            "中近東/アフリカ>レバノン",
            "中近東/アフリカ>その他中近東/アフリカ>"
        ]
        
        self.hermes_filter = [
            "レディース>ウェアALL",
            "レディース>コート＆ジャケット",
            "レディース>ドレス＆スカート",
            "レディース>トップス＆シャツ",
            "レディース>パンツ＆ショートパンツ",
            "レディース>ニット＆ツイルレーヌ",
            "レディース>ビーチウェア",
            "レディース>スカーフ、ショール＆マフラーALL",
            "レディース>スカーフ＆シルクアクセサリー",
            "レディース>カシミアストール＆マフラー",
            "レディース>ツイリー＆その他スモールサイズ",
            "レディース>シューズALL",
            # "レディース>アイコン モデル",
            "レディース>サンダル",
            "レディース>スニーカー",
            "レディース>バレエシューズ＆パンプス",
            "レディース>ミュール",
            "レディース>エスパドリーユ",
            "レディース>モカシン＆ダービー",
            "レディース>ブーツ＆ショートブーツ",
            "レディース>バッグ＆スモールレザーグッズALL",
            "レディース>バッグ＆スモールレザーグッズ",
            "レディース>スモールレザーグッズ",
            "レディース>トラベルバッグ",
            "レディース>バッグアクセサリー",
            "レディース>ベルト",
            "レディース>ハット＆グローブ",
            "メンズ>ウェアALL",
            "メンズ>コート＆ジャケット",
            "メンズ>スポーツウェア",
            "メンズ>トップス",
            "メンズ>パンツ＆ショートパンツ",
            "メンズ>ニット＆スウェット",
            "メンズ>Tシャツ＆ポロ",
            "メンズ>スイムウェア",
            "メンズ>ネクタイ・スカーフ・マフラーALL",
            "メンズ>ネクタイ、蝶ネクタイ＆ポケットチーフ",
            "メンズ>マフラー＆カレ",
            "メンズ>シューズALL",
            # "メンズ>アイコン モデル",
            "メンズ>スニーカー",
            "メンズ>サンダル",
            "メンズ>エスパドリーユ＆ミュール",
            "メンズ>ローファー＆ダービー",
            "メンズ>ショートブーツ",
            "メンズ>バッグ＆スモールレザーグッズALL",
            "メンズ>バッグ",
            "メンズ>スモールレザーグッズ",
            "メンズ>トラベルバッグ",
            "メンズ>バッグアクセサリー",
            "メンズ>ベルト",
            "メンズ>ファッションジュエリー",
            "メンズ>ハット＆グローブ",
            "メンズ>テックアクセサリー",
            "ホーム・アウトドア>ホーム・アウトドアALL",
            "ホーム・アウトドア>プレード＆クッション",
            "ホーム・アウトドア>オブジェ",
            "ホーム・アウトドア>テーブルウェア",
            # "ホーム・アウトドア>家具と照明",
            "ホーム・アウトドア>オフィス用品＆筆記用具",
            "ホーム・アウトドア>ビーチ＆バスルーム",
            "ホーム・アウトドア>スポーツ＆アウトドア",
            "ジュエリー＆ウォッチ>ジュエリーALL",
            "ジュエリー＆ウォッチ>ゴールドジュエリー",
            "ジュエリー＆ウォッチ>シルバージュエリー",
            "ジュエリー＆ウォッチ>ウォッチALL",
            "ジュエリー＆ウォッチ>レディース",
            "ジュエリー＆ウォッチ>メンズ",
            "ジュエリー＆ウォッチ>アップルウォッチ エルメス",
            "フレグランス＆ビューティ>フレグランスALL",
            "フレグランス＆ビューティ>レディース",
            "フレグランス＆ビューティ>メンズ",
            "フレグランス＆ビューティ>エクスクルーシブ",
            "フレグランス＆ビューティ>バスライン",
            "フレグランス＆ビューティ>ビューティALL",
            "フレグランス＆ビューティ>フェイス",
            "フレグランス＆ビューティ>アイ",
            "フレグランス＆ビューティ>ハンド",
            "フレグランス＆ビューティ>アクセサリー",
            "ギフト＆Petit H>Petit H",
            "ギフト＆Petit H>レディースギフト",
            "ギフト＆Petit H>メンズギフト",
            "ギフト＆Petit H>ベビーギフト"
        ]
        
        self.special_brands = [
            "ALLブランド",
            "S MAX MARA",
            "7 FOR ALL MANKIND",
            "A.P.C.",
            "ACNE STUDIOS",
            "ADIDAS BY STELLA MCCARTNEY",
            "ADIDAS BY WALES BONNER",
            # "AESOP",
            "AFRI-CANI",
            "AG JEANS",
            "AGOLDE",
            "ALAÏA",
            "ALANUI",
            "ALBERTO BIANI",
            "ALESSANDRA RICH",
            "ALESSANDRO ENRIQUEZ",
            "ALEXANDER MCQUEEN",
            "ALICE+OLIVIA",
            "ALYSI",
            # "ALYSON OLDOINI",
            "AMI PARIS",
            "AMINA MUADDI",
            "APUNTOB",
            "ASH",
            "AURALEE",
            "AUTRY",
            "AVANT TOI",
            "AVENUE MONTAIGNE",
            "AWAKE NY",
            "BALENCIAGA",
            "BALLY",
            "BALMAIN",
            "BAOBAO ISSEY MIYAKE",
            "BARACUTA",
            "BARBOUR",
            "BASE",
            "BENEDETTA BRUZZICHES",
            "BILLIONAIRE BOYS CLUB",
            "BIRKENSTOCK",
            "BLUE SKY INN",
            "BLUMARINE",
            "BOGLIOLI",
            "BORNTOSTANDOUT",
            "BORSALINO",
            "BOTTEGA VENETA",
            "BOYY",
            "BRIGLIA 1949",
            "BRUNELLO CUCINELLI",
            "BURBERRY",
            "C.P. COMPANY",
            "CANADA GOOSE",
            "CAREL PARIS",
            "CARHARTT WIP",
            "CASABLANCA",
            "CASADEI",
            "CASTANER SINCE 1927",
            "CELINE",
            "CHLOÉ",
            "CHRISTIAN LOUBOUTIN",
            "CHURCH'S",
            "CIRCOLO 1901",
            "CLOSED",
            "COACH",
            "COMME DES GARÇONS",
            "COMME DES GARÇONS COMME DES GA",
            "COMME DES GARÇONS PLAY",
            "COMME DES GARÇONS SHIRT",
            "COMMON PROJECTS",
            "CONVERSE",
            "CONVERSE X DRKSHDW",
            "CONVERSE X KENZO",
            "COPERNI",
            "CORTANA",
            "COURRÈGES",
            "CT PLAGE",
            "CUBA LAB",
            "DANIELA GREGIS",
            "DARKPARK",
            "DAYTONA 73",
            # "DE SIENA",
            "DIESEL",
            "DISNEY X COPERNI",
            "DOLCE & GABBANA",
            "DR. MARTENS",
            "DRAGON DIFFUSION",
            "DRIES VAN NOTEN",
            # "DS&DURGA",
            "DSQUARED2",
            "DUNST",
            "E.L.V. DENIM",
            "EA7 EMPORIO ARMANI",
            "ELIOS MILANO",
            "ELISABETTA FRANCHI",
            "EMPORIO ARMANI",
            "ENES",
            "ENFANTS RICHES DÉPRIMÉS",
            "EQUIPMENT",
            "ERIKA CAVALLINI",
            "ERMANNO",
            "ERMANNO SCERVINO",
            "ETRO",
            "EXTREME CASHMERE",
            "FABIANA FILIPPI",
            "FALIERO SARTI",
            "FAY",
            "FENDI",
            "FERMAS.CLUB",
            "FERRAGAMO",
            "FILIPPA K",
            "FILSON",
            "FINAMORE 1925 NAPOLI",
            "FLOYD",
            "FOR RESTLESS SLEEPERS",
            # "FORNICE OBJECTS",
            "FORTE FORTE",
            "FRONT STREET 8",
            "FURLING BY GIANI",
            "GANNI",
            "GHOUD",
            "GIANLUCA CAPANNOLO",
            "GIANVITO ROSSI",
            "GIUSEPPE DI MORABITO",
            "GIVENCHY",
            "GOLDEN GOOSE",
            "GOLDHAWK",
            "GUCCI",
            "HAIKURE",
            "HARRIS WHARF LONDON",
            "HARTFORD",
            "HEREU",
            "HERNO",
            "HERSKIND",
            "HIDESINS",
            "HOGAN",
            "HOMME PLISSE' ISSEY MIYAKE",
            "I LOVE MY PANTS",
            "ICECREAM",
            "IRO",
            "ISABEL MARANT",
            "ISSEY MIYAKE",
            "JACOB COHEN",
            "JACQUEMUS",
            "JEAN PAUL GAULTIER",
            "JIL SANDER",
            "JIMMY CHOO",
            # "JOZICA",
            "JUICY COUTURE",
            "JUNYA WATANABE",
            "JUNYA WATANABE X CARHARTT",
            "K.JACQUES",
            "KENZO",
            "KHAITE",
            "KIRED",
            "KITON",
            "LA MILANESA",
            "LANVIN",
            "LEMAIRE",
            "LISA YANG",
            "LIVIANA CONTI",
            "LOEWE",
            "LOEWE PAULA'S IBIZA",
            "MACH & MACH",
            "MAISON KITSUNE'",
            "MAISON MARGIELA",
            "MAJESTIC",
            "MALIN FRANKE",
            # "MALIN+GOETZ",
            "MALONE SOULIERS",
            "MANEBI",
            "MARANT ETOILE",
            "MARC JACOBS",
            "MARINE SERRE",
            "MARNI",
            "MAX MARA",
            "MAX MARA THE CUBE",
            "MC2 SAINT BARTH",
            "MICHAEL MICHAEL KORS",
            "MISSONI",
            "MISSONI BEACHWEAR",
            "MIU MIU",
            "MM6 MAISON MARGIELA",
            # "MM6 X DR.MARTENS",
            "MM6 X SALOMON",
            "MOISMONT",
            "MONCLER",
            "MONCLER + RICK OWENS",
            "MONCLER GRENOBLE",
            "MONIES",
            "MOON BOOT",
            "MOTHER",
            "MOU",
            "MUGLER",
            "NEW ARRIVALS ILKYAZ OZEL",
            "NEW BALANCE",
            "NEW ERA",
            "NEW ERA CAPSULE",
            "NORDA",
            "NORMA KAMALI",
            "OBIDI",
            "OFF-WHITE",
            "ON",
            "OTTOLINGER",
            "PALM ANGELS",
            "PALM ANGELS X SUICOKE",
            "PALTO'",
            "PARABOOT",
            "PARIS TEXAS",
            "PAROSH",
            "PAUL SMITH",
            "PEUTEREY",
            "PIERRE-LOUIS MASCIA",
            "PLEASURES",
            "PLEATS PLEASE ISSEY MIYAKE",
            "POLDO DOG COUTURE",
            "POST ARCHIVE FACTION (PAF)",
            "PRADA",
            "PS PAUL SMITH",
            "PUCCI",
            "RED WING SHOES",
            "RELAX RE-LUX",
            "RENÉ CAOVILLA",
            "RICK OWENS",
            "RICK OWENS DRKSHDW",
            "ROGER VIVIER",
            "SACAI",
            "SACAI X CARHARTT WIP",
            "SAINT LAURENT",
            "SAINT MXXXXXX",
            "SAMANTHA SUNG",
            "SANDBEIGE",
            "SARAHWEAR",
            "SELF PORTRAIT",
            "SEMICOUTURE",
            "SILK95FIVE",
            "SIYU",
            "SOFT GOAT",
            "SOLACE LONDON",
            "SONORA",
            "SOSUE",
            "SPORTMAX",
            "ST.PIECE OF LONDON",
            "STELLA McCARTNEY",
            "STONE ISLAND",
            "STRIKE ANYWHERE VINTAGE",
            "STUDIO NICHOLSON",
            "STUSSY",
            "TAGLIATORE",
            "TALLER MARMO",
            "THE ATTICO",
            "THE LATEST",
            "THE NINA STUDIO",
            "THE ROW",
            "THEMOIRE'",
            "THOM BROWNE",
            "TOD'S",
            "TOM FORD",
            "TORY BURCH",
            "TOTEME",
            "TRAME AUREE",
            "UGG AUSTRALIA",
            "VALENTINO",
            "VALENTINO GARAVANI",
            "VALEXTRA",
            "VEJA",
            "VERSACE",
            "VETEMENTS",
            "VIA MASINI 80",
            "VICTORIA BECKHAM",
            "VIPERA",
            "VIVIENNE WESTWOOD",
            "WARDROBE.NYC",
            "WHITE SAND",
            "WILD CASHMERE",
            "WOLFORD",
            "WOOLRICH",
            "Y-3",
            "Y/PROJECT",
            "ZANELLATO",
            "ZIMMERMANN"
        ]
        
        self.special_categories = [
            "",
            "ALLカテゴリー",
            "ウェア",            #Abbigliamento
            "アクセサリー",       #Accessori
            "バッグ",            #Borse
            "シューズ",          #Calzature
            "ジュエリー",        #Gioielli
            "インナーウェア",    #Intimo
            "フレグランス"      #Profumeria
        ]    
        
        self.buyma_categories = [
            "",
            "レディースファッション/トップス/Tシャツ・カットソー",
            "レディースファッション/トップス/チュニック",
            "レディースファッション/トップス/ニット・セーター",
            "レディースファッション/トップス/パーカー・フーディ",
            "レディースファッション/トップス/スウェット・トレーナー",
            "レディースファッション/トップス/ブラウス・シャツ",
            "レディースファッション/トップス/ポロシャツ",
            "レディースファッション/トップス/ベスト・ジレ",
            "レディースファッション/トップス/トップスその他",
            "レディースファッション/トップス/タンクトップ",
            "レディースファッション/トップス/カーディガン",
            "レディースファッション/トップス/アンサンブル",
            "レディースファッション/トップス/キャミソール",
            "レディースファッション/ボトムス/スカート",
            "レディースファッション/ボトムス/ミニスカート",
            "レディースファッション/ボトムス/パンツ",
            "レディースファッション/ボトムス/ショートパンツ",
            "レディースファッション/ボトムス/デニム・ジーパン",
            "レディースファッション/ボトムス/ボトムスその他",
            "レディースファッション/ワンピース・オールインワン/ワンピース",
            "レディースファッション/ワンピース・オールインワン/オールインワン・サロペット",
            "レディースファッション/ワンピース・オールインワン/ワンピースその他",
            "レディースファッション/ワンピース・オールインワン/セットアップ",
            "レディースファッション/アウター/コート",
            "レディースファッション/アウター/ジャケット",
            "レディースファッション/アウター/ダウンジャケット・コート",
            "レディースファッション/アウター/ブルゾン",
            "レディースファッション/アウター/アウターその他",
            "レディースファッション/アウター/ポンチョ・ケープ",
            "レディースファッション/アウター/ダウンベスト",
            "レディースファッション/アウター/レザージャケット・コート",
            "レディースファッション/アウター/トレンチコート",
            "レディースファッション/アウター/ムートン・ファーコート",
            "レディースファッション/アウター/ベスト・ジレ",
            "レディースファッション/アウター/フリースジャケット",
            "レディースファッション/靴・シューズ/サンダル・ミュール",
            "レディースファッション/靴・シューズ/スニーカー",
            "レディースファッション/靴・シューズ/パンプス",
            "レディースファッション/靴・シューズ/シューズ・サンダルその他",
            "レディースファッション/靴・シューズ/フラットシューズ",
            "レディースファッション/靴・シューズ/パーティーシューズ",
            "レディースファッション/靴・シューズ/スリッポン",
            "レディースファッション/靴・シューズ/ローファー・オックスフォード",
            "レディースファッション/靴・シューズ/バレエシューズ",
            "レディースファッション/靴・シューズ/レインシューズ",
            "レディースファッション/バッグ・カバン/トートバッグ",
            "レディースファッション/バッグ・カバン/ハンドバッグ",
            "レディースファッション/バッグ・カバン/エコバッグ",
            "レディースファッション/バッグ・カバン/かごバッグ",
            "レディースファッション/バッグ・カバン/クラッチバッグ",
            "レディースファッション/バッグ・カバン/ショルダーバッグ・ポシェット",
            "レディースファッション/バッグ・カバン/ボストンバッグ",
            "レディースファッション/バッグ・カバン/バックパック・リュック",
            "レディースファッション/バッグ・カバン/バッグ・カバンその他",
            "レディースファッション/バッグ・カバン/パーティーバッグ",
            "レディースファッション/アクセサリー/ネックレス・ペンダント",
            "レディースファッション/アクセサリー/ピアス",
            "レディースファッション/アクセサリー/指輪・リング",
            "レディースファッション/アクセサリー/天然石・パワーストーン",
            "レディースファッション/アクセサリー/ヘアアクセサリー",
            "レディースファッション/アクセサリー/アクセサリーその他",
            "レディースファッション/アクセサリー/ブレスレット",
            "レディースファッション/アクセサリー/アンクレット",
            "レディースファッション/アクセサリー/パーティーアクセサリー",
            "レディースファッション/アクセサリー/イヤリング",
            "レディースファッション/アクセサリー/ブローチ・コサージュ",
            "レディースファッション/アイウェア/サングラス",
            "レディースファッション/アイウェア/メガネ",
            "レディースファッション/アイウェア/アイウェアその他",
            "レディースファッション/ファッション雑貨・小物/スカーフ",
            "レディースファッション/ファッション雑貨・小物/マフラー・ストール",
            "レディースファッション/ファッション雑貨・小物/手袋",
            "レディースファッション/ファッション雑貨・小物/ベルト",
            "レディースファッション/ファッション雑貨・小物/傘・レイングッズ",
            "レディースファッション/ファッション雑貨・小物/ファッション雑貨・小物その他",
            "レディースファッション/ファッション雑貨・小物/イヤーマフ",
            "レディースファッション/ファッション雑貨・小物/ハンカチ",
            "レディースファッション/ファッション雑貨・小物/マスク",
            "レディースファッション/インナー・ルームウェア/スパッツ・レギンス",
            "レディースファッション/インナー・ルームウェア/タイツ・ソックス",
            "レディースファッション/インナー・ルームウェア/ショーツ",
            "レディースファッション/インナー・ルームウェア/スリップ・インナー・キャミ",
            "レディースファッション/インナー・ルームウェア/ブラジャー",
            "レディースファッション/インナー・ルームウェア/ブラジャー＆ショーツ",
            "レディースファッション/インナー・ルームウェア/ルームウェア・パジャマ",
            "レディースファッション/インナー・ルームウェア/インナー・ルームウェアその他",
            "レディースファッション/水着・ビーチグッズ/ビキニ",
            "レディースファッション/水着・ビーチグッズ/ワンピース水着",
            "レディースファッション/水着・ビーチグッズ/タンキニ",
            "レディースファッション/水着・ビーチグッズ/ラッシュガード",
            "レディースファッション/水着・ビーチグッズ/ボードショーツ・レギンス",
            "レディースファッション/水着・ビーチグッズ/うきわ",
            "レディースファッション/水着・ビーチグッズ/ビーチタオル",
            "レディースファッション/水着・ビーチグッズ/水着・ビーチグッズその他",
            "レディースファッション/その他ファッション/スーツ",
            "レディースファッション/その他ファッション/コスプレ・衣装",
            "レディースファッション/その他ファッション/浴衣・着物・和装",
            "レディースファッション/その他ファッション/その他",
            "レディースファッション/その他ファッション/福袋",
            "レディースファッション/ブーツ/ロングブーツ",
            "レディースファッション/ブーツ/ショートブーツ・ブーティ",
            "レディースファッション/ブーツ/レインブーツ",
            "レディースファッション/ブーツ/ブーツその他",
            "レディースファッション/ブーツ/ミドルブーツ",
            "レディースファッション/財布・小物/折りたたみ財布",
            "レディースファッション/財布・小物/コインケース・小銭入れ",
            "レディースファッション/財布・小物/カードケース・名刺入れ",
            "レディースファッション/財布・小物/財布・小物その他",
            "レディースファッション/財布・小物/キーホルダー・キーリング",
            "レディースファッション/財布・小物/長財布",
            "レディースファッション/財布・小物/ポーチ",
            "レディースファッション/財布・小物/パスケース",
            "レディースファッション/財布・小物/キーケース",
            "レディースファッション/財布・小物/バッグチャーム",
            "レディースファッション/腕時計/アナログ腕時計",
            "レディースファッション/腕時計/デジタル腕時計",
            "レディースファッション/腕時計/腕時計その他",
            "レディースファッション/腕時計/腕時計用ベルト・バンド",
            "レディースファッション/ブライダル・パーティー/パーティードレス",
            "レディースファッション/ブライダル・パーティー/ウェディングドレス",
            "レディースファッション/ブライダル・パーティー/ウェディングアクセサリー",
            "レディースファッション/ブライダル・パーティー/ウェディングシューズ",
            "レディースファッション/ブライダル・パーティー/ブライダル小物",
            "レディースファッション/ブライダル・パーティー/引き出物",
            "レディースファッション/ブライダル・パーティー/ブライダルその他",
            "レディースファッション/ブライダル・パーティー/ボレロ・ショール",
            "レディースファッション/ブライダル・パーティー/パーティー小物その他",
            "レディースファッション/帽子/ハット",
            "レディースファッション/帽子/キャップ",
            "レディースファッション/帽子/ストローハット",
            "レディースファッション/帽子/ニットキャップ・ビーニー",
            "レディースファッション/帽子/ベレー帽",
            "レディースファッション/帽子/ハンチング・キャスケット",
            "レディースファッション/帽子/帽子・その他",
            "レディースファッション/ヨガ・フィットネス/フィットネストップス",
            "レディースファッション/ヨガ・フィットネス/フィットネスボトムス",
            "レディースファッション/ヨガ・フィットネス/ヨガマット",
            "レディースファッション/ヨガ・フィットネス/フィットネスバッグ",
            "レディースファッション/ヨガ・フィットネス/フィットネスシューズ",
            "レディースファッション/ヨガ・フィットネス/フィットネスアクセサリー",
            "レディースファッション/ヨガ・フィットネス/ヨガ・フィットネスその他",
            "レディースファッション/スマホケース・テックアクセサリー/iPhone・スマホケース",
            "レディースファッション/スマホケース・テックアクセサリー/PCケース・バッグ",
            "レディースファッション/スマホケース・テックアクセサリー/iPad・タブレットケース",
            "レディースファッション/スマホケース・テックアクセサリー/テックアクセサリー",
            "レディースファッション/スマホケース・テックアクセサリー/スマホケース・テックアクセサリーその他",
            "メンズファッション/トップス/Tシャツ・カットソー",
            "メンズファッション/トップス/ポロシャツ",
            "メンズファッション/トップス/シャツ",
            "メンズファッション/トップス/パーカー・フーディ",
            "メンズファッション/トップス/スウェット・トレーナー",
            "メンズファッション/トップス/ニット・セーター",
            "メンズファッション/トップス/トップスその他",
            "メンズファッション/トップス/タンクトップ",
            "メンズファッション/トップス/カーディガン",
            "メンズファッション/トップス/ベスト・ジレ",
            "メンズファッション/パンツ・ボトムス/デニム・ジーパン",
            "メンズファッション/パンツ・ボトムス/ハーフ・ショートパンツ",
            "メンズファッション/パンツ・ボトムス/パンツ・ボトムスその他",
            "メンズファッション/パンツ・ボトムス/カーゴパンツ",
            "メンズファッション/パンツ・ボトムス/スウェットパンツ",
            "メンズファッション/パンツ・ボトムス/スラックス",
            "メンズファッション/パンツ・ボトムス/オーバーオール",
            "メンズファッション/パンツ・ボトムス/チノパンツ",
            "メンズファッション/パンツ・ボトムス/トラックパンツ・ジャージ",
            "メンズファッション/アウター・ジャケット/コートその他",
            "メンズファッション/アウター・ジャケット/ジャケットその他",
            "メンズファッション/アウター・ジャケット/ダウンジャケット",
            "メンズファッション/アウター・ジャケット/ブルゾン",
            "メンズファッション/アウター・ジャケット/アウターその他",
            "メンズファッション/アウター・ジャケット/レザージャケット",
            "メンズファッション/アウター・ジャケット/ピーコート",
            "メンズファッション/アウター・ジャケット/ダッフルコート",
            "メンズファッション/アウター・ジャケット/トレンチコート",
            "メンズファッション/アウター・ジャケット/ジャージ",
            "メンズファッション/アウター・ジャケット/ダウンベスト",
            "メンズファッション/アウター・ジャケット/テーラードジャケット",
            "メンズファッション/アウター・ジャケット/フリースジャケット",
            "メンズファッション/アウター・ジャケット/MA-1",
            "メンズファッション/アウター・ジャケット/マウンテンパーカー",
            "メンズファッション/アウター・ジャケット/スタジャン",
            "メンズファッション/アウター・ジャケット/スカジャン",
            "メンズファッション/アウター・ジャケット/モッズコート",
            "メンズファッション/アウター・ジャケット/チェスターコート",
            "メンズファッション/アウター・ジャケット/デニムジャケット",
            "メンズファッション/アウター・ジャケット/コーチジャケット",
            "メンズファッション/靴・ブーツ・サンダル/サンダル",
            "メンズファッション/靴・ブーツ・サンダル/スニーカー",
            "メンズファッション/靴・ブーツ・サンダル/ドレスシューズ・革靴・ビジネスシューズ",
            "メンズファッション/靴・ブーツ・サンダル/ブーツ",
            "メンズファッション/靴・ブーツ・サンダル/靴・ブーツ・サンダルその他",
            "メンズファッション/バッグ・カバン/ショルダーバッグ",
            "メンズファッション/バッグ・カバン/トートバッグ",
            "メンズファッション/バッグ・カバン/ボストンバッグ",
            "メンズファッション/バッグ・カバン/バックパック・リュック",
            "メンズファッション/バッグ・カバン/ビジネスバッグ・アタッシュケース",
            "メンズファッション/バッグ・カバン/バッグ・カバンその他",
            "メンズファッション/バッグ・カバン/クラッチバッグ",
            "メンズファッション/バッグ・カバン/エコバッグ",
            "メンズファッション/アクセサリー/ネックレス・チョーカー",
            "メンズファッション/アクセサリー/ブレスレット",
            "メンズファッション/アクセサリー/指輪・リング",
            "メンズファッション/アクセサリー/アクセサリーその他",
            "メンズファッション/アクセサリー/ピアス",
            "メンズファッション/アクセサリー/アンクレット",
            "メンズファッション/アクセサリー/イヤリング",
            "メンズファッション/アクセサリー/バングル",
            "メンズファッション/アクセサリー/イヤーカフ",
            "メンズファッション/財布・雑貨/長財布",
            "メンズファッション/財布・雑貨/雑貨・その他",
            "メンズファッション/財布・雑貨/カードケース・名刺入れ",
            "メンズファッション/財布・雑貨/ステーショナリー",
            "メンズファッション/財布・雑貨/折りたたみ財布",
            "メンズファッション/財布・雑貨/コインケース・小銭入れ",
            "メンズファッション/財布・雑貨/キーケース・キーリング",
            "メンズファッション/財布・雑貨/マネークリップ",
            "メンズファッション/インナー・ルームウェア/アンダーシャツ・インナー",
            "メンズファッション/インナー・ルームウェア/トランクス",
            "メンズファッション/インナー・ルームウェア/ブリーフ",
            "メンズファッション/インナー・ルームウェア/ボクサーパンツ",
            "メンズファッション/インナー・ルームウェア/ルームウェア・パジャマ",
            "メンズファッション/インナー・ルームウェア/インナー・ルームウェアその他",
            "メンズファッション/水着・ビーチグッズ/ラッシュガード",
            "メンズファッション/水着・ビーチグッズ/うきわ",
            "メンズファッション/水着・ビーチグッズ/ビーチタオル",
            "メンズファッション/水着・ビーチグッズ/水着・ビーチグッズその他",
            "メンズファッション/水着・ビーチグッズ/水着",
            "メンズファッション/その他ファッション/福袋",
            "メンズファッション/その他ファッション/その他",
            "メンズファッション/ファッション雑貨・小物/マフラー",
            "メンズファッション/ファッション雑貨・小物/手袋",
            "メンズファッション/ファッション雑貨・小物/ベルト",
            "メンズファッション/ファッション雑貨・小物/傘・レイングッズ",
            "メンズファッション/ファッション雑貨・小物/ネクタイ",
            "メンズファッション/ファッション雑貨・小物/ファッション雑貨・小物その他",
            "メンズファッション/ファッション雑貨・小物/ハンカチ",
            "メンズファッション/ファッション雑貨・小物/靴下・ソックス",
            "メンズファッション/ファッション雑貨・小物/ストール",
            "メンズファッション/ファッション雑貨・小物/マスク",
            "メンズファッション/アイウェア/サングラス",
            "メンズファッション/アイウェア/メガネ",
            "メンズファッション/アイウェア/アイウェアその他",
            "メンズファッション/腕時計/アナログ時計",
            "メンズファッション/腕時計/デジタル時計",
            "メンズファッション/腕時計/腕時計その他",
            "メンズファッション/腕時計/腕時計用ベルト・バンド",
            "メンズファッション/帽子/ハット",
            "メンズファッション/帽子/キャップ",
            "メンズファッション/帽子/ストローハット",
            "メンズファッション/帽子/ニットキャップ・ビーニー",
            "メンズファッション/帽子/ハンチング・キャスケット",
            "メンズファッション/帽子/帽子・その他",
            "メンズファッション/フィットネス/フィットネストップス",
            "メンズファッション/フィットネス/フィットネスボトムス",
            "メンズファッション/フィットネス/フィットネスバッグ",
            "メンズファッション/フィットネス/フィットネスシューズ",
            "メンズファッション/フィットネス/フィットネスアクセサリー",
            "メンズファッション/フィットネス/フィットネスその他",
            "メンズファッション/スーツ",
            "メンズファッション/セットアップ",
            "メンズファッション/スマホケース・テックアクセサリー/iPhone・スマホケース",
            "メンズファッション/スマホケース・テックアクセサリー/PCケース・バッグ",
            "メンズファッション/スマホケース・テックアクセサリー/iPad・タブレットケース",
            "メンズファッション/スマホケース・テックアクセサリー/テックアクセサリー",
            "メンズファッション/スマホケース・テックアクセサリー/iPhone・スマホアクセサリー",
            "メンズファッション/スマホケース・テックアクセサリー/スマホケース・テックアクセサリーその他",
            "ビューティー/メイクアップ/アイメイク",
            "ビューティー/メイクアップ/リップグロス・口紅",
            "ビューティー/メイクアップ/ファンデーション",
            "ビューティー/メイクアップ/チーク",
            "ビューティー/メイクアップ/メイクアップその他",
            "ビューティー/メイクアップ/アイブロウ",
            "ビューティー/メイクアップ/プライマー・コンシーラー",
            "ビューティー/メイクアップ/フェイスパウダー",
            "ビューティー/メイクアップ/日焼け止め・サンケア",
            "ビューティー/ボディ・ハンド・フットケア/ハンドケア",
            "ビューティー/ボディ・ハンド・フットケア/ボディケア",
            "ビューティー/ボディ・ハンド・フットケア/日焼け止め・サンケア",
            "ビューティー/ボディ・ハンド・フットケア/フットケア",
            "ビューティー/ボディ・ハンド・フットケア/ボディケアその他",
            "ビューティー/メイク小物/ブラシ",
            "ビューティー/メイク小物/鏡",
            "ビューティー/メイク小物/メイクポーチ",
            "ビューティー/メイク小物/メイク小物その他",
            "ビューティー/香水・フレグランス",
            "ビューティー/ネイルグッズ/マニキュア",
            "ビューティー/ネイルグッズ/ジェルネイル",
            "ビューティー/ネイルグッズ/ネイルアート・チップ",
            "ビューティー/ネイルグッズ/ネイルケア",
            "ビューティー/ネイルグッズ/ネイルグッズその他",
            "ビューティー/ヘアケア/シャンプー・コンディショナー",
            "ビューティー/ヘアケア/ヘアオイル・エッセンス",
            "ビューティー/ヘアケア/ヘアケアその他",
            "ビューティー/ヘアケア/ヘアパック・トリートメント",
            "ビューティー/ヘアケア/ヘアブラシ",
            "ビューティー/ビューティーその他/福袋",
            "ビューティー/ビューティーその他/その他",
            "ビューティー/スキンケア・基礎化粧品/洗顔・クレンジング",
            "ビューティー/スキンケア・基礎化粧品/化粧水",
            "ビューティー/スキンケア・基礎化粧品/乳液",
            "ビューティー/スキンケア・基礎化粧品/美容液・クリーム",
            "ビューティー/スキンケア・基礎化粧品/スキンケア・基礎化粧品その他",
            "ビューティー/スキンケア・基礎化粧品/パック・フェイスマスク",
            "ビューティー/スキンケア・基礎化粧品/アイケア",
            "ビューティー/スキンケア・基礎化粧品/リップケア",
            "ビューティー/バスグッズ",
            "ビューティー/オーラル・デンタルケア/歯磨き粉",
            "ビューティー/オーラル・デンタルケア/ホワイトニング",
            "ビューティー/オーラル・デンタルケア/オーラル・デンタルケアその他",
            "ビューティー/美容家電・グッズ/ヘアアイロン・ドライヤー",
            "ビューティー/美容家電・グッズ/美容家電・グッズその他",
            "ビューティー/メンズビューティー/ボディケア",
            "ビューティー/メンズビューティー/スキンケア",
            "ビューティー/メンズビューティー/ヘアケア",
            "ビューティー/メンズビューティー/シェービング・グルーミング",
            "ビューティー/メンズビューティー/フレグランス",
            "ビューティー/メンズビューティー/メンズビューティーその他",
            "ビューティー/サプリメント",
            "ライフスタイル/キッチン・ダイニング/鍋・調理器具",
            "ライフスタイル/キッチン・ダイニング/食器（皿）",
            "ライフスタイル/キッチン・ダイニング/コップ・グラス",
            "ライフスタイル/キッチン・ダイニング/容器・ストッカー",
            "ライフスタイル/キッチン・ダイニング/キッチン雑貨",
            "ライフスタイル/キッチン・ダイニング/テーブルリネン",
            "ライフスタイル/キッチン・ダイニング/エプロン",
            "ライフスタイル/キッチン・ダイニング/キッチン・ダイニングその他",
            "ライフスタイル/キッチン・ダイニング/マグカップ・ティーカップ",
            "ライフスタイル/キッチン・ダイニング/タンブラー・水筒",
            "ライフスタイル/キッチン・ダイニング/カトラリー",
            "ライフスタイル/キッチン・ダイニング/キッチン収納",
            "ライフスタイル/キッチン・ダイニング/料理本",
            "ライフスタイル/キッチン・ダイニング/ランチボックス・弁当箱",
            "ライフスタイル/インテリア雑貨/DIY・工具",
            "ライフスタイル/インテリア雑貨/インテリア雑貨その他",
            "ライフスタイル/インテリア雑貨/ミラー・鏡・姿見",
            "ライフスタイル/インテリア雑貨/小物入れ(トレイ)",
            "ライフスタイル/インテリア雑貨/ティッシュケース",
            "ライフスタイル/インテリア雑貨/花瓶・植木鉢",
            "ライフスタイル/インテリア雑貨/ポスター",
            "ライフスタイル/インテリア雑貨/壁紙",
            "ライフスタイル/インテリア雑貨/タペストリー",
            "ライフスタイル/インテリア雑貨/ルームフレグランス",
            "ライフスタイル/インテリア雑貨/キャンドル",
            "ライフスタイル/インテリア雑貨/時計",
            "ライフスタイル/インテリア雑貨/キャンバスアート・絵画",
            "ライフスタイル/インテリア雑貨/オブジェ・置物",
            "ライフスタイル/インテリア雑貨/フェイクグリーン",
            "ライフスタイル/インテリア雑貨/カレンダー",
            "ライフスタイル/インテリア雑貨/ウォールステッカー",
            "ライフスタイル/インテリア雑貨/フォトフレーム・写真立て",
            "ライフスタイル/トラベルグッズ/トラベルバッグ・旅行かばん",
            "ライフスタイル/トラベルグッズ/トラベル小物",
            "ライフスタイル/トラベルグッズ/トラベルグッズその他",
            "ライフスタイル/トラベルグッズ/スーツケース・キャリーケース",
            "ライフスタイル/トラベルグッズ/ラゲッジタグ",
            "ライフスタイル/トラベルグッズ/パスポートケース・ウォレット",
            "ライフスタイル/トラベルグッズ/トラベルポーチ",
            "ライフスタイル/ペット用品/ペット用品その他",
            "ライフスタイル/ペット用品/ペットカート",
            "ライフスタイル/ペット用品/首輪・ハーネス・リード",
            "ライフスタイル/ペット用品/ペットキャリー・スリング",
            "ライフスタイル/ペット用品/ペット(犬猫)服",
            "ライフスタイル/ペット用品/ペットベッド・クッション",
            "ライフスタイル/ペット用品/ペット用おもちゃ",
            "ライフスタイル/ペット用品/フードボウル・えさ関連",
            "ライフスタイル/ペット用品/ペットケア用品",
            "ライフスタイル/ペット用品/ペットステップ",
            "ライフスタイル/ペット用品/カーシート・ドライブボックス",
            "ライフスタイル/ペット用品/ペット用毛布",
            "ライフスタイル/ペット用品/ペットゲート",
            "ライフスタイル/ペット用品/キャットタワー",
            "ライフスタイル/ペット用品/ペットハウス・ケージ",
            "ライフスタイル/ホビー・カルチャー/ゲーム",
            "ライフスタイル/ホビー・カルチャー/キャラクターグッズ",
            "ライフスタイル/ホビー・カルチャー/模型・プラモデル・ラジコン",
            "ライフスタイル/ホビー・カルチャー/楽器",
            "ライフスタイル/ホビー・カルチャー/手芸・工芸道具",
            "ライフスタイル/ホビー・カルチャー/アイドル・俳優・ミュージシャン・映画・ドラマグッズ",
            "ライフスタイル/ホビー・カルチャー/ホビー・カルチャーその他",
            "ライフスタイル/ホビー・カルチャー/絵本・書籍",
            "ライフスタイル/ホビー・カルチャー/CD・DVD",
            "ライフスタイル/ホビー・カルチャー/衣装・コスチューム",
            "ライフスタイル/ホビー・カルチャー/パーティーグッズ",
            "ライフスタイル/デザイン文具・ステーショナリ/手帳・スケジュール帳",
            "ライフスタイル/デザイン文具・ステーショナリ/鉛筆・ペン・万年筆",
            "ライフスタイル/デザイン文具・ステーショナリ/レターセット・ポストカード",
            "ライフスタイル/デザイン文具・ステーショナリ/ノート",
            "ライフスタイル/デザイン文具・ステーショナリ/ペンケース",
            "ライフスタイル/デザイン文具・ステーショナリ/デザイン文具・ステーショナリその他",
            "ライフスタイル/デザイン文具・ステーショナリ/マスキングテープ",
            "ライフスタイル/ライフスタイルその他/福袋",
            "ライフスタイル/ライフスタイルその他/その他",
            "ライフスタイル/ファブリック/ベッドカバー・布団カバー・寝具",
            "ライフスタイル/ファブリック/ブランケット(ひざ掛け)",
            "ライフスタイル/ファブリック/クッション・クッションカバー",
            "ライフスタイル/ファブリック/ラグ・カーペット",
            "ライフスタイル/ファブリック/カーテン",
            "ライフスタイル/ファブリック/タオル",
            "ライフスタイル/ファブリック/ファブリックその他",
            "ライフスタイル/ファブリック/マット",
            "ライフスタイル/ファブリック/ソファカバー",
            "ライフスタイル/ファブリック/手芸用生地",
            "ライフスタイル/電子タバコ/スターターキット",
            "ライフスタイル/電子タバコ/リキッド",
            "ライフスタイル/電子タバコ/アクセサリー",
            "ライフスタイル/家具・日用品/棚・ラック・収納",
            "ライフスタイル/家具・日用品/照明",
            "ライフスタイル/家具・日用品/バス・ランドリー",
            "ライフスタイル/家具・日用品/洗剤・清掃グッズ",
            "ライフスタイル/家具・日用品/ダストボックス(ゴミ箱)・傘立て",
            "ライフスタイル/家具・日用品/家具・日用品その他",
            "ライフスタイル/家具・日用品/椅子・チェア",
            "ライフスタイル/家具・日用品/机・テーブル",
            "ライフスタイル/家具・日用品/鏡台・ドレッサー",
            "ライフスタイル/家具・日用品/ソファ",
            "ライフスタイル/家具・日用品/スツール・オットマン",
            "ライフスタイル/家具・日用品/ベッド・ヘッドボード",
            "ライフスタイル/家具・日用品/パーテーション・間仕切り",
            "ライフスタイル/家具・日用品/マットレス",
            "ライフスタイル/レジャー・アウトドア・キャンプ/バーベキュー・クッキング用品",
            "ライフスタイル/レジャー・アウトドア・キャンプ/レジャー・ピクニック用品",
            "ライフスタイル/レジャー・アウトドア・キャンプ/アウトドア(キャンプ)チェア",
            "ライフスタイル/レジャー・アウトドア・キャンプ/寝袋・シュラフ",
            "ライフスタイル/レジャー・アウトドア・キャンプ/テント・シェルター",
            "ライフスタイル/レジャー・アウトドア・キャンプ/オートバイ・自転車",
            "ライフスタイル/レジャー・アウトドア・キャンプ/レジャー・アウトドア・キャンプその他",
            "ライフスタイル/レジャー・アウトドア・キャンプ/クーラーボックス・クーラーバッグ",
            "ライフスタイル/レジャー・アウトドア・キャンプ/ハンモック",
            "ライフスタイル/レジャー・アウトドア・キャンプ/焚き火台",
            "ライフスタイル/レジャー・アウトドア・キャンプ/アウトドア(キャンプ)テーブル",
            "ライフスタイル/レジャー・アウトドア・キャンプ/タープ",
            "ライフスタイル/レジャー・アウトドア・キャンプ/ランタン",
            "ライフスタイル/デザイン家電/カメラ・カメラグッズ",
            "ライフスタイル/デザイン家電/AV機器・オーディオ機器",
            "ライフスタイル/デザイン家電/生活家電",
            "ライフスタイル/デザイン家電/キッチン家電",
            "ライフスタイル/デザイン家電/スマホ・パソコン・ゲーム関連機器",
            "ライフスタイル/デザイン家電/デザイン家電その他",
            "ライフスタイル/ワイン/赤ワイン",
            "ライフスタイル/ワイン/白ワイン",
            "ライフスタイル/ワイン/ロゼワイン",
            "ライフスタイル/ワイン/スパークリングワイン",
            "ライフスタイル/ワイン/ワインその他",
            "ベビー・キッズ/ベビー服・ファッション用品(〜90cm)/ベビーロンパース・カバーオール",
            "ベビー・キッズ/ベビー服・ファッション用品(〜90cm)/靴下・タイツ",
            "ベビー・キッズ/ベビー服・ファッション用品(〜90cm)/ベビーパジャマ・ルームウェア・スリーパー",
            "ベビー・キッズ/ベビー服・ファッション用品(〜90cm)/ベビーその他",
            "ベビー・キッズ/ベビー服・ファッション用品(〜90cm)/ベビーワンピース",
            "ベビー・キッズ/ベビー服・ファッション用品(〜90cm)/ベビー用トップス",
            "ベビー・キッズ/ベビー服・ファッション用品(〜90cm)/ベビー用ボトムス",
            "ベビー・キッズ/ベビー服・ファッション用品(〜90cm)/べビーアウター",
            "ベビー・キッズ/ベビー服・ファッション用品(〜90cm)/よだれかけ・スタイ・ビブ",
            "ベビー・キッズ/ベビー服・ファッション用品(〜90cm)/ベビー肌着・下着",
            "ベビー・キッズ/ベビー服・ファッション用品(〜90cm)/おくるみ・ブランケット",
            "ベビー・キッズ/ベビー服・ファッション用品(〜90cm)/ベビーレインコート・レイングッズ",
            "ベビー・キッズ/ベビー服・ファッション用品(〜90cm)/ベビー水着・ビーチグッズ",
            "ベビー・キッズ/ベビー服・ファッション用品(〜90cm)/ベビー用コスチューム・着ぐるみ",
            "ベビー・キッズ/ベビー服・ファッション用品(〜90cm)/ベビー用フォーマル・セレモニーウェア",
            "ベビー・キッズ/ベビー服・ファッション用品(〜90cm)/ファッション雑貨・小物",
            "ベビー・キッズ/ベビー服・ファッション用品(〜90cm)/帽子",
            "ベビー・キッズ/子供服・ファッション用品(85cm〜)/靴下・タイツ",
            "ベビー・キッズ/子供服・ファッション用品(85cm〜)/子供用パジャマ・ルームウェア・スリーパー",
            "ベビー・キッズ/子供服・ファッション用品(85cm〜)/キッズその他",
            "ベビー・キッズ/子供服・ファッション用品(85cm〜)/キッズ用トップス",
            "ベビー・キッズ/子供服・ファッション用品(85cm〜)/キッズ用ボトムス",
            "ベビー・キッズ/子供服・ファッション用品(85cm〜)/キッズワンピース・オールインワン",
            "ベビー・キッズ/子供服・ファッション用品(85cm〜)/キッズアウター",
            "ベビー・キッズ/子供服・ファッション用品(85cm〜)/子供用肌着・下着",
            "ベビー・キッズ/子供服・ファッション用品(85cm〜)/キッズスポーツウェア",
            "ベビー・キッズ/子供服・ファッション用品(85cm〜)/子供用レインコート・レイングッズ",
            "ベビー・キッズ/子供服・ファッション用品(85cm〜)/子供用水着・ビーチグッズ",
            "ベビー・キッズ/子供服・ファッション用品(85cm〜)/子供用コスチューム・着ぐるみ",
            "ベビー・キッズ/子供服・ファッション用品(85cm〜)/子供用フォーマル・セレモニーウェア",
            "ベビー・キッズ/子供服・ファッション用品(85cm〜)/ファッション雑貨・小物",
            "ベビー・キッズ/子供服・ファッション用品(85cm〜)/帽子",
            "ベビー・キッズ/マタニティウェア・授乳服・グッズ/マタニティ下着・肌着",
            "ベビー・キッズ/マタニティウェア・授乳服・グッズ/マタニティウェア・授乳服・グッズその他",
            "ベビー・キッズ/マタニティウェア・授乳服・グッズ/マタニティトップス",
            "ベビー・キッズ/マタニティウェア・授乳服・グッズ/マタニティパンツ・スカート",
            "ベビー・キッズ/マタニティウェア・授乳服・グッズ/マタニティレギンス・タイツ",
            "ベビー・キッズ/マタニティウェア・授乳服・グッズ/マタニティワンピース",
            "ベビー・キッズ/マタニティウェア・授乳服・グッズ/マタニティコート・アウター",
            "ベビー・キッズ/マタニティウェア・授乳服・グッズ/マタニティパジャマ・ルームウェア",
            "ベビー・キッズ/マタニティウェア・授乳服・グッズ/マタニティ水着・フィットネス・スポーツウェア",
            "ベビー・キッズ/マタニティウェア・授乳服・グッズ/マタニティドレス・フォーマル",
            "ベビー・キッズ/マタニティウェア・授乳服・グッズ/母子手帳ケース",
            "ベビー・キッズ/キッズ・ベビー・マタニティその他/福袋",
            "ベビー・キッズ/キッズ・ベビー・マタニティその他/その他",
            "ベビー・キッズ/ベビーシューズ・靴(〜14cm)/ベビースニーカー",
            "ベビー・キッズ/ベビーシューズ・靴(〜14cm)/ベビーバレエシューズ・フラットシューズ",
            "ベビー・キッズ/ベビーシューズ・靴(〜14cm)/ベビーサンダル",
            "ベビー・キッズ/ベビーシューズ・靴(〜14cm)/ベビーブーツ",
            "ベビー・キッズ/ベビーシューズ・靴(〜14cm)/ベビーレインブーツ・長靴",
            "ベビー・キッズ/ベビーシューズ・靴(〜14cm)/ベビーフォーマルシューズ",
            "ベビー・キッズ/ベビーシューズ・靴(〜14cm)/ベビーシューズ・靴その他",
            "ベビー・キッズ/キッズシューズ・子供靴(14.5cm〜)/キッズスニーカー",
            "ベビー・キッズ/キッズシューズ・子供靴(14.5cm〜)/キッズバレエシューズ・フラットシューズ",
            "ベビー・キッズ/キッズシューズ・子供靴(14.5cm〜)/キッズサンダル",
            "ベビー・キッズ/キッズシューズ・子供靴(14.5cm〜)/キッズブーツ",
            "ベビー・キッズ/キッズシューズ・子供靴(14.5cm〜)/キッズレインブーツ・長靴",
            "ベビー・キッズ/キッズシューズ・子供靴(14.5cm〜)/キッズルームシューズ",
            "ベビー・キッズ/キッズシューズ・子供靴(14.5cm〜)/キッズフォーマルシューズ",
            "ベビー・キッズ/キッズシューズ・子供靴(14.5cm〜)/キッズシューズ・靴その他",
            "ベビー・キッズ/キッズバッグ・財布/子供用リュック・バックパック",
            "ベビー・キッズ/キッズバッグ・財布/子供用トート・レッスンバッグ",
            "ベビー・キッズ/キッズバッグ・財布/子供用ショルダー・ポシェット・ボディバッグ",
            "ベビー・キッズ/キッズバッグ・財布/キッズバッグ・財布その他",
            "ベビー・キッズ/キッズバッグ・財布/かごバッグ",
            "ベビー・キッズ/食事用グッズ/おしゃぶり",
            "ベビー・キッズ/食事用グッズ/哺乳瓶",
            "ベビー・キッズ/食事用グッズ/離乳食用食器・カトラリー",
            "ベビー・キッズ/食事用グッズ/食事用スタイ・エプロン",
            "ベビー・キッズ/食事用グッズ/食事用グッズその他",
            "ベビー・キッズ/おもちゃ・知育玩具/プレイマット・ベビーマット",
            "ベビー・キッズ/おもちゃ・知育玩具/ガラガラ・ラトル",
            "ベビー・キッズ/おもちゃ・知育玩具/ぬいぐるみ・フィギュア・ドールハウス",
            "ベビー・キッズ/おもちゃ・知育玩具/おままごとセット",
            "ベビー・キッズ/おもちゃ・知育玩具/ブロック・パズル・ゲーム",
            "ベビー・キッズ/おもちゃ・知育玩具/絵本・ぬり絵・シール",
            "ベビー・キッズ/おもちゃ・知育玩具/ミニカー・レール",
            "ベビー・キッズ/おもちゃ・知育玩具/バストイ・水遊びグッズ",
            "ベビー・キッズ/おもちゃ・知育玩具/おもちゃ・知育玩具その他",
            "ベビー・キッズ/おもちゃ・知育玩具/キッズテント・プレイテント",
            "ベビー・キッズ/おもちゃ・知育玩具/乗り物おもちゃ",
            "ベビー・キッズ/ベビーベッド・バウンサー/ベビーベッド・ベビー寝具",
            "ベビー・キッズ/ベビーベッド・バウンサー/ベビーチェア",
            "ベビー・キッズ/ベビーベッド・バウンサー/ベビーバウンサー",
            "ベビー・キッズ/ベビーベッド・バウンサー/ベビーベッド・バウンサーその他",
            "ベビー・キッズ/ベビーカー",
            "ベビー・キッズ/抱っこ紐・スリング・ベビーキャリア",
            "ベビー・キッズ/赤ちゃん用スキンケア",
            "ベビー・キッズ/チャイルドシート(ベビー/ジュニア)",
            "ベビー・キッズ/マザーズバッグ",
            "スポーツ/ゴルフ/キャディーバッグ・ケース",
            "スポーツ/ゴルフ/ラウンド用品・小物",
            "スポーツ/ゴルフ/レディース・トップス",
            "スポーツ/ゴルフ/レディース・ボトムス",
            "スポーツ/ゴルフ/レディース・アウター",
            "スポーツ/ゴルフ/レディース・シューズ",
            "スポーツ/ゴルフ/レディース・アクセサリー",
            "スポーツ/ゴルフ/レディース・クラブ",
            "スポーツ/ゴルフ/メンズ・トップス",
            "スポーツ/ゴルフ/メンズ・ボトムス",
            "スポーツ/ゴルフ/メンズ・アウター",
            "スポーツ/ゴルフ/メンズ・シューズ",
            "スポーツ/ゴルフ/メンズ・アクセサリー",
            "スポーツ/ゴルフ/メンズ・クラブ",
            "スポーツ/ゴルフ/ゴルフその他",
            "スポーツ/ランニング/レディース・トップス",
            "スポーツ/ランニング/レディース・ボトムス",
            "スポーツ/ランニング/レディース・アウター",
            "スポーツ/ランニング/レディース・インナー",
            "スポーツ/ランニング/レディース・シューズ",
            "スポーツ/ランニング/レディース・アクセサリー",
            "スポーツ/ランニング/メンズ・トップス",
            "スポーツ/ランニング/メンズ・ボトムス",
            "スポーツ/ランニング/メンズ・アウター",
            "スポーツ/ランニング/メンズ・インナー",
            "スポーツ/ランニング/メンズ・シューズ",
            "スポーツ/ランニング/メンズ・アクセサリー",
            "スポーツ/ランニング/ランニングその他",
            "スポーツ/ウィンタースポーツ/レディース・スノーウェア",
            "スポーツ/ウィンタースポーツ/メンズ・スノーウェア",
            "スポーツ/ウィンタースポーツ/スキー板",
            "スポーツ/ウィンタースポーツ/スノーボード",
            "スポーツ/ウィンタースポーツ/レディース・アクセサリー",
            "スポーツ/ウィンタースポーツ/メンズ・アクセサリー",
            "スポーツ/ウィンタースポーツ/ウィンタースポーツその他",
            "スポーツ/サーフィン/レディース・ラッシュガード",
            "スポーツ/サーフィン/メンズ・ラッシュガード",
            "スポーツ/サーフィン/レディース・ウェットスーツ",
            "スポーツ/サーフィン/レディース・アクセサリー",
            "スポーツ/サーフィン/メンズ・ウェットスーツ",
            "スポーツ/サーフィン/メンズ・アクセサリー",
            "スポーツ/サーフィン/サーフボード",
            "スポーツ/サーフィン/サーフィンその他",
            "スポーツ/スポーツその他/福袋",
            "スポーツ/スポーツその他/その他",
            "スポーツ/テニス/レディース",
            "スポーツ/テニス/メンズ",
            "スポーツ/テニス/シューズ",
            "スポーツ/テニス/テニスラケット",
            "スポーツ/テニス/テニス小物・バッグ",
            "スポーツ/テニス/テニスその他",
            "スポーツ/フットボール・サッカー/ウェア",
            "スポーツ/フットボール・サッカー/シューズ",
            "スポーツ/フットボール・サッカー/フットボール・サッカーその他"
        ]
        
        self.seasons = [
            "",
            "指定なし",
            "2009 以前",
            "2010 Cruise",
            "2010 SS(春夏)",
            "2010-11 AW(秋冬)",
            "2011 Cruise",
            "2011 SS(春夏)",
            "2011-12 AW(秋冬)",
            "2012 Cruise",
            "2012 SS(春夏)",
            "2012-13 AW(秋冬)",
            "2013 Cruise",
            "2013 SS(春夏)",
            "2013-14 AW(秋冬)",
            "2014 Cruise",
            "2014 SS(春夏)",
            "2014-15AW(秋冬)",
            "2015 Cruise",
            "2015 SS(春夏)",
            "2015-16AW(秋冬)",
            "2016 Cruise",
            "2016 SS(春夏)",
            "2016-17AW(秋冬)",
            "2017 Cruise",
            "2017 SS(春夏)",
            "2017-18AW(秋冬)",
            "2018 Cruise",
            "2018 SS(春夏)",
            "2018-19AW(秋冬)",
            "2019 Cruise",
            "2019 SS(春夏)",
            "2019-20AW(秋冬)",
            "2020 Cruise",
            "2020 SS(春夏)",
            "2020-21 AW(秋冬)",
            "2021 Cruise",
            "2021 SS(春夏)",
            "2021-22 AW(秋冬)",
            "2022 Cruise",
            "2022 SS(春夏)",
            "2022-23 AW(秋冬)",
            "2023 Cruise",
            "2023 SS(春夏)",
            "2023-24 AW(秋冬)",
            "2024 SS(春夏)",
            "2024 Cruise",
            "2024-2025 AW",
            "2025 SS（春夏）",
            "2025　Cruise",
            "2025-2026 AW"
        ]
        
        self.tags = [
            "",
            "注目>手元に在庫あり(即発送可能)",
            "注目>日本未入荷",
            "注目>ブランドコラボ",
            "注目>英語版向け",
            "注目>【訳あり】アイテム",
            "追加料金>追加料金設定あり",
            "柄>無地",
            "柄>ロゴ",
            "柄>レオパード（ヒョウ柄）",
            "柄>ゼブラ",
            "柄>その他アニマル柄",
            "柄>パイソン",
            "柄>ドット（水玉）",
            "柄>アーガイル",
            "柄>ストライプ",
            "柄>ボーダー",
            "柄>ハート",
            "柄>花柄",
            "柄>星",
            "柄>カモフラージュ（迷彩）",
            "柄>千鳥格子",
            "柄>グレンチェック",
            "柄>ギンガムチェック",
            "柄>タータンチェック",
            "柄>その他チェック",
            "柄>トロピカル柄",
            "柄>バイカラー",
            "柄>スカル",
            "柄>ペイズリー",
            "柄>ユニオンジャック",
            "柄>タイダイ",
            "柄>モノグラム",
            "柄>トライバル",
            "素材>レザー（本革）",
            "素材>フェイクレザー",
            "素材>コットン",
            "素材>ウール",
            "素材>エナメル",
            "素材>カシミヤ",
            "素材>コーデュロイ",
            "素材>アンゴラ",
            "素材>シルク",
            "素材>スウェット",
            "素材>スエード",
            "素材>ツイード",
            "素材>ナイロン",
            "素材>ダンガリー",
            "素材>リネン（麻）",
            "素材>デニム",
            "素材>シフォン",
            "素材>レース",
            "素材>ベロア",
            "素材>ゴアテックス",
            "素材>ボア",
            "素材>レーヨン",
            "丈>ショート丈",
            "丈>ミディアム丈",
            "丈>ロング丈",
            "袖>ノースリーブ",
            "袖>半袖",
            "袖>七分丈",
            "袖>長袖",
            "袖>オフショルダー",
            "袖>ドルマンスリーブ",
            "袖>パフスリーブ",
            "袖>ボリューム袖",
            "袖>スーパーロング袖",
            "襟>Vネック",
            "襟>Uネック",
            "襟>ボートネック",
            "襟>タートルネック",
            "襟>ハイネック",
            "襟>クルーネック",
            "襟>ヘンリーネック",
            "襟>ホルターネック",
            "襟>スキッパー",
            "タイプ>Aライン",
            "タイプ>フレア",
            "タイプ>タイト",
            "タイプ>ラップドレス",
            "タイプ>サロペット",
            "タイプ>マキシ",
            "タイプ>シャツワンピース",
            "タイプ>キャミソールワンピース",
            "タイプ>ティアード",
            "スタイル>パーティースタイル",
            "スタイル>オフィススタイル",
            "スタイル>エレガントスタイル",
            "スタイル>カジュアルスタイル",
            "スタイル>フォーマルスタイル",
            "ギフト・ラッピング>ブランド直営店ラッピングOK",
            "ギフト・ラッピング>ギフトラッピングOK",
            "ギフト・ラッピング>ギフトセット",
            "人気>ハート",
            "人気>ユニセックス",
            "人気>異素材ミックス",
            "人気>タッセル",
            "人気>スタッズ",
            "人気>ストリート",
            "人気>チェーン",
            "人気>ハンドメイド",
            "人気>ホームパーティーアイテム",
            "人気>ミモレ丈",
            "人気>ホリデー・クリスマス限定",
            "人気>ハロウィン",
            "人気>フリンジ",
            "人気>円高還元セール",
            "人気>ビジュー",
            "人気>オーバーサイズ",
            "人気>コーディネートセット",
            "人気>カーキ",
            "人気>ボルドー",
            "人気>テラコッタ",
            "人気>イニシャル・名入れ",
            "人気>グリッター",
            "人気>セットアイテム",
            "掲載雑誌>ELLE",
            "掲載雑誌>BAILA",
            "掲載雑誌>Gina",
            "掲載雑誌>GINZA",
            "掲載雑誌>GISELe",
            "掲載雑誌>IN Red",
            "掲載雑誌>JJ",
            "掲載雑誌>SPUR",
            "掲載雑誌>STORY",
            "掲載雑誌>sweet",
            "掲載雑誌>VERY",
            "掲載雑誌>ViVi",
            "掲載雑誌>Begin",
            "掲載雑誌>GQ",
            "掲載雑誌>LEON",
            "掲載雑誌>MENSCLUB",
            "掲載雑誌>OCEANS",
            "掲載雑誌>Ollie",
            "掲載雑誌>POPEYE",
            "掲載雑誌>Safari",
            "掲載雑誌>SENSE",
            "掲載雑誌>UOMO",
            "掲載雑誌>warp",
            "掲載雑誌>411",
            "掲載雑誌>MENS NON-NO",
            "掲載雑誌>VOGUE",
            "掲載雑誌>Oggi",
            "掲載雑誌>CLASSY",
            "掲載雑誌>mini",
            "掲載雑誌>smart",
            "掲載雑誌>Voce",
            "掲載雑誌>CanCam",
            "掲載雑誌>FINEBOYS",
            "掲載雑誌>NINE CONTINUE",
            "愛用者>ヴィクトリア・ベッカム",
            "愛用者>キャサリン妃",
            "愛用者>ケイト・モス",
            "愛用者>セレーナ・ゴメス",
            "愛用者>テイラー・スウィフト",
            "愛用者>リアーナ",
            "愛用者>滝沢眞規子(タキマキ)",
            "愛用者>登坂広臣",
            "愛用者>ジャスティン・ビーバー",
            "愛用者>カニエ・ウェスト",
            "愛用者>ケンダル・ジェンナー",
            "愛用者>カイリー・ジェンナー",
            "愛用者>ジジ・ハディット",
            "愛用者>BTS/防弾少年団(バンタン)",
            "愛用者>V(テテ)",
            "愛用者>ジョングク(グク)",
            "愛用者>ジミン",
            "愛用者>SEVENTEEN(セブチ)",
            "愛用者>Snow Man(スノーマン)",
            "愛用者>目黒蓮(Snow Man)",
            "愛用者>仲里依紗",
            "愛用者>コムドット",
            "愛用者>NiziU(ニジュー)",
            "愛用者>BLACKPINK(ブルピン)",
            "愛用者>ジェニー",
            "愛用者>TWICE",
            "愛用者>King & Prince(キンプリ)",
            "愛用者>SixTONES(ストーンズ) ",
            "愛用者>JO1",
            "愛用者>木村拓哉",
            "愛用者>ITZY",
            "愛用者>ATEEZ",
            "愛用者>AB6IX",
            "愛用者>NCT",
            "愛用者>ENHYPEN(エンハイプン)",
            "愛用者>OH MY GIRL(オマゴル)",
            "愛用者>カン・ダニエル",
            "愛用者>CRAVITY",
            "愛用者>The Boyz",
            "愛用者>(G)I-DLE",
            "愛用者>Stray Kids(スキズ)",
            "愛用者>ソン・イェジン",
            "愛用者>チャ・ウヌ",
            "愛用者>チャン・グンソク",
            "愛用者>TOMORROW X TOGETHER(TXT)",
            "愛用者>TREASURE",
            "愛用者>パク・ソジュン",
            "愛用者>パク・ミニョン",
            "愛用者>MAMAMOO(ママム)",
            "愛用者>MONSTA X(モンエク)",
            "愛用者>Red Velvet(レドベル)",
            "愛用者>平野紫耀(Number_i)",
            "愛用者>朝倉未来",
            "愛用者>常田大希(King Gnu)",
            "愛用者>大谷翔平",
            "愛用者>ジョンハン(SEVENTEEN)",
            "愛用者>サナ(TWICE)",
            "愛用者>モモ(TWICE)",
            "愛用者>IVE(アイヴ)",
            "愛用者>ウォニョン(IVE)",
            "愛用者>LE SSERAFIM(ル セラフィム)",
            "愛用者>チェウォン(LE SSERAFIM)",
            "愛用者>サクラ(LE SSERAFIM)",
            "愛用者>カズハ(LE SSERAFIM)",
            "愛用者>ウンチェ(LE SSERAFIM)",
            "愛用者>ユンジン(LE SSERAFIM)",
            "愛用者>NewJeans(ニュージーンズ)",
            "愛用者>ハニ(NewJeans)",
            "愛用者>ヘリン(NewJeans)",
            "愛用者>ダニエル(NewJeans)",
            "愛用者>ヘイン(NewJeans)",
            "愛用者>ミンジ(NewJeans)",
            "取り扱い店舗>Neiman Marcus",
            "取り扱い店舗>Nordstrom",
            "取り扱い店舗>BARNEYS NEW YORK",
            "取り扱い店舗>Saks Fifth Avenue",
            "トレンド>マットリップ",
            "トレンド>ロンT",
            "トレンド>ロールオン フレグランス",
            "トレンド>もこもこ",
            "トレンド>バスソルト",
            "トレンド>ナイロンジャケット",
            "トレンド>アドベントカレンダー",
            "トレンド>サファリ",
            "トレンド>フロントボタン",
            "トレンド>アシンメトリー",
            "トレンド>クリアフレーム",
            "トレンド>ミリタリー",
            "トレンド>ボアフリース",
            "トレンド>ライフスタイルクリスマス特集",
            "トレンド>謝恩会",
            "トレンド>結婚式・二次会",
            "トレンド>メタリック",
            "トレンド>ネオン",
            "トレンド>シャーベットカラー",
            "トレンド>CPOジャケット",
            "トレンド>シースルー",
            "トレンド>ラウンジウェア",
            "トレンド>スラウチパンツ",
            "トレンド>ストラップサンダル",
            "トレンド>スケーター",
            "トレンド>チェーンパーツ",
            "トレンド>ハイテクスニーカー",
            "トレンド>ローテクスニーカー",
            "トレンド>厚底スニーカー",
            "トレンド>マスクにつきにくいリップ",
            "トレンド>肌に優しいUV",
            "トレンド>カラーマスカラ",
            "トレンド>カラーアイライナー",
            "トレンド>ピンク系アイシャドウ",
            "トレンド>フェイスパウダー",
            "トレンド>カラーリップバーム",
            "トレンド>鎮静ケア",
            "トレンド>日やけ止めスティック",
            "トレンド>日やけ止めクッション",
            "トレンド>日やけ止めパウダー",
            "トレンド>日やけ止めカラー下地",
            "トレンド>2021HOLIDAY",
            "トレンド>オープンリング",
            "トレンド>アウトレット",
            "トレンド>アームウォーマー・アームカバー",
            "トレンド>日傘",
            "トレンド>五本指ソックス",
            "トレンド>くるぶし丈ソックス",
            "トレンド>足袋ソックス",
            "トレンド>ウォッシュデニム",
            "トレンド>クロッグサンダル",
            "トレンド>リカバリーサンダル",
            "トレンド>メッシュキャップ",
            "トレンド>チビT",
            "トレンド>バラクラバ",
            "トレンド>ニットポロ",
            "トレンド>バレエコア",
            "トレンド>リボン",
            "トレンド>フレアパンツ",
            "トレンド>プリーツパンツ",
            "トレンド>ハイウエスト",
            "トレンド>ネックロゴTシャツ",
            "トレンド>リンガー(トリム)Tシャツ",
            "トレンド>クロップドジャケット",
            "トレンド>スニーカーパンプス",
            "トレンド>カウチン",
            "トレンド>襟付きカーディガン",
            "トレンド>ジップカーディガン",
            "トレンド>短丈"
        ]
        
        self.shipping_methods = [
            "",
            "国際郵便"
        ]
        
        # Add header title
        self.header_label = ttk.Label(self.root, text="初期設定", font=("Arial", 12))
        # self.header_label.pack(pady=(10, 0))
        self.center_window()
        self.create_widgets()
    
    def center_window(self):
        """Center the window on screen"""
        self.root.update_idletasks()
        width = self.root.winfo_width()
        height = self.root.winfo_height()
        x = (self.root.winfo_screenwidth() // 2) - (width // 2)
        y = (self.root.winfo_screenheight() // 2) - (height // 2)
        self.root.geometry(f'{width}x{height}+{x}+{y}')

    def initialize_variables(self):
        """Initialize all variables and constants"""
        # Initialize form variables
        self.title_var = tk.StringVar()
        # self.model_line_var = tk.StringVar()
        self.gender_special_var = tk.StringVar()
        self.category_special_var = tk.StringVar()
        self.brand_special_var = tk.StringVar()
        # self.hermes_category_var = tk.StringVar()
        self.purchased_place_var = tk.StringVar()
        self.delivery_location_var = tk.StringVar()
        self.product_comment_var = tk.StringVar()
        
        # Initialize file path variables
        self.bg_path = None
        self.bg_img_tk = None
        
        # Initialize terminal text widget reference
        self.terminal_text = None
            
    def create_widgets(self):
        # Create scrollable container
        container = ttk.Frame(self.root)
        container.pack(fill="both", expand=True)
        
        # Create canvas and scrollbar
        canvas = tk.Canvas(container)
        scrollbar = ttk.Scrollbar(container, orient="vertical", command=canvas.yview)
        
        # Configure canvas
        canvas.configure(yscrollcommand=scrollbar.set)
        
        # Pack scrollbar and canvas
        scrollbar.pack(side="right", fill="y")
        canvas.pack(side="left", fill="both", expand=True)
        
        # Create main frame inside canvas
        main_frame = ttk.Frame(canvas, padding="20")
        canvas_window = canvas.create_window((0, 0), window=main_frame, anchor="nw")
        
        # Configure grid weights
        main_frame.grid_columnconfigure(0, weight=1)
        main_frame.grid_columnconfigure(1, weight=1)
        
        # Function to update scroll region
        def _on_frame_configure(event):
            canvas.configure(scrollregion=canvas.bbox("all"))
            
        # Function to update canvas width
        def _on_canvas_configure(event):
            canvas.itemconfigure(canvas_window, width=event.width)
            
        # Bind events
        main_frame.bind("<Configure>", _on_frame_configure)
        canvas.bind("<Configure>", _on_canvas_configure)
        
        # Enable mouse wheel scrolling
        def _on_mousewheel(event):
            # macOS-specific mouse wheel handling
            import platform
            if platform.system() == "Darwin":  # macOS
                # macOS uses different delta values
                canvas.yview_scroll(int(-1 * event.delta), "units")
            else:
                # Windows/Linux mouse wheel handling
                canvas.yview_scroll(int(-1 * (event.delta / 120)), "units")
            
        canvas.bind_all("<MouseWheel>", _on_mousewheel)
        
        # Add macOS-specific scrolling bindings
        def _on_macos_scroll(event):
            """Handle macOS-specific scrolling events"""
            try:
                # Handle different macOS scroll events
                if hasattr(event, 'delta'):
                    canvas.yview_scroll(int(-1 * event.delta), "units")
                elif hasattr(event, 'num'):
                    # Button-4 and Button-5 for mouse wheel
                    if event.num == 4:
                        canvas.yview_scroll(-1, "units")
                    elif event.num == 5:
                        canvas.yview_scroll(1, "units")
            except Exception as e:
                print(f"macOS scroll error: {e}")
                
        # Bind additional scroll events for macOS
        canvas.bind("<Button-4>", _on_macos_scroll)
        canvas.bind("<Button-5>", _on_macos_scroll)
        
        # Add touch scrolling support for macOS
        def _on_touch_scroll(event):
            """Handle touch scrolling for macOS"""
            try:
                # Handle touch drag events
                if hasattr(event, 'delta'):
                    canvas.yview_scroll(int(-1 * event.delta), "units")
            except Exception as e:
                print(f"Touch scroll error: {e}")
                
        canvas.bind("<B1-Motion>", _on_touch_scroll)
        
        # Add keyboard scrolling for accessibility
        def _on_key_scroll(event):
            """Handle keyboard scrolling"""
            if event.keysym == "Up":
                canvas.yview_scroll(-1, "units")
            elif event.keysym == "Down":
                canvas.yview_scroll(1, "units")
            elif event.keysym == "Page_Up":
                canvas.yview_scroll(-10, "units")
            elif event.keysym == "Page_Down":
                canvas.yview_scroll(10, "units")
            elif event.keysym == "Home":
                canvas.yview_moveto(0.0)
            elif event.keysym == "End":
                canvas.yview_moveto(1.0)
                
        canvas.bind("<Key>", _on_key_scroll)
        canvas.focus_set()  # Enable keyboard focus

        PADX_LEFT = (0, 30)
        PADX_RIGHT = (30, 0)
        PADY = (0, 10)
        PADX_MID = (10, 10)

        # Row 0: タイトル開始文字 | モデル・ライン
        ttk.Label(main_frame, text="タイトル開始文字", font=("Arial", 12)).grid(row=0, column=0, sticky="w", pady=(0, 5), padx=PADX_LEFT)
        # ttk.Label(main_frame, text="モデル・ライン", font=("Arial", 12)).grid(row=0, column=1, sticky="w", pady=(0, 5), padx=PADX_RIGHT)
        self.title_var = tk.StringVar()
        self.title_combo = ttk.Combobox(main_frame, textvariable=self.title_var, state="readonly", width=50)
        self.title_combo['values'] = ("", "記載なし", "【送料無料】", "【VIP仕入れ】")
        self.title_combo.grid(row=1, column=0, sticky="we", pady=PADY, padx=PADX_LEFT)
        self.title_combo.current(0)

        # Row 2: 性別(specialshop)| カテゴリー(specialshop)
        # Labels
        ttk.Label(main_frame, text="性別(specialshop)", font=("Arial", 12)).grid(row=2, column=0, sticky="w", pady=(0, 5), padx=PADX_LEFT)
        ttk.Label(main_frame, text="カテゴリー(specialshop)", font=("Arial", 12)).grid(row=4, column=0, sticky="w", pady=(0, 5), padx=PADX_LEFT)
        # Comboboxes
        self.gender_special_var = tk.StringVar()
        self.gender_special_combo = ttk.Combobox(main_frame, textvariable=self.gender_special_var, state="readonly", width=50)
        self.gender_special_combo['values'] = ("", "レディース", "メンズ")
        self.gender_special_combo.grid(row=3, column=0, sticky="we", pady=PADY, padx=PADX_LEFT)
        self.gender_special_combo.current(0)
        self.category_special_var = tk.StringVar()
        self.category_special_combo = ttk.Combobox(main_frame, textvariable=self.category_special_var, state="readonly", width=50)
        self.category_special_combo['values'] = self.special_categories
        self.category_special_combo.grid(row=5, column=0, sticky="we", pady=PADY, padx=PADX_LEFT)
        self.category_special_combo.current(0)

        # Row 0: ブランド(specialshop) title
        ttk.Label(main_frame, text="ブランド(specialshop)", font=("Arial", 12)).grid(row=0, column=1, sticky="w", pady=(0, 5), padx=PADX_RIGHT)
        
        # Row 1-5: ブランド(specialshop) listbox
        self.brand_special_var = tk.StringVar()
        self.brand_special_listbox = tk.Listbox(main_frame, selectmode="multiple", width=50, height=8, exportselection=False)
        for item in self.special_brands:
            self.brand_special_listbox.insert(tk.END, item)
        self.brand_special_listbox.grid(row=1, column=1, rowspan=5, sticky="nsew", pady=PADY, padx=PADX_RIGHT)

        # Row 6: 買付地 | 発送地
        ttk.Label(main_frame, text="買付地", font=("Arial", 12)).grid(row=6, column=0, sticky="w", pady=(0, 5), padx=PADX_LEFT)
        ttk.Label(main_frame, text="発送地", font=("Arial", 12)).grid(row=6, column=1, sticky="w", pady=(0, 5), padx=PADX_RIGHT)
        self.purchased_place_var = tk.StringVar()
        self.purchased_place_combo = ttk.Combobox(main_frame, textvariable=self.purchased_place_var, state="readonly", width=50)
        self.purchased_place_combo['values'] = self.locations
        self.purchased_place_combo.grid(row=7, column=0, sticky="we", pady=PADY, padx=PADX_LEFT)
        self.purchased_place_combo.current(0)
        self.delivery_location_var = tk.StringVar()
        self.delivery_location_combo = ttk.Combobox(main_frame, textvariable=self.delivery_location_var, state="readonly", width=50)
        self.delivery_location_combo['values'] = self.locations
        self.delivery_location_combo.grid(row=7, column=1, sticky="we", pady=PADY, padx=PADX_RIGHT)
        self.delivery_location_combo.current(0)

        # Row 8: シーズン | タグ
        ttk.Label(main_frame, text="シーズン", font=("Arial", 12)).grid(row=8, column=0, sticky="w", pady=(0, 5), padx=PADX_LEFT)
        ttk.Label(main_frame, text="タグ", font=("Arial", 12)).grid(row=8, column=1, sticky="w", pady=(0, 5), padx=PADX_RIGHT)
        self.season_var = tk.StringVar()
        self.season_combo = ttk.Combobox(main_frame, textvariable=self.season_var, state="readonly", width=50)
        self.season_combo['values'] = self.seasons
        self.season_combo.grid(row=9, column=0, sticky="we", pady=PADY, padx=PADX_LEFT)
        self.season_combo.current(0)
        self.tag_var = tk.StringVar()
        self.tag_combo = ttk.Combobox(main_frame, textvariable=self.tag_var, state="readonly", width=50)
        self.tag_combo['values'] = self.tags
        self.tag_combo.grid(row=9, column=1, sticky="we", pady=PADY, padx=PADX_RIGHT)
        self.tag_combo.current(0)
        
        # Row 10: 配送方法 | 発送までの日数
        ttk.Label(main_frame, text="配送方法", font=("Arial", 12)).grid(row=10, column=0, sticky="w", pady=(0, 5), padx=PADX_LEFT)
        ttk.Label(main_frame, text="発送までの日数", font=("Arial", 12)).grid(row=10, column=1, sticky="w", pady=(0, 5), padx=PADX_RIGHT)
        self.shipping_method_var = tk.StringVar()
        self.shipping_method_combo = ttk.Combobox(main_frame, textvariable=self.shipping_method_var, state="readonly", width=50)
        self.shipping_method_combo['values'] = self.shipping_methods
        self.shipping_method_combo.grid(row=11, column=0, sticky="we", pady=PADY, padx=PADX_LEFT)
        self.shipping_method_combo.current(0)
        
        self.shipping_days_var = tk.IntVar(value=1)
        self.shipping_days_spinbox = tk.Spinbox(
            main_frame, from_=1, to=30, textvariable=self.shipping_days_var, width=10, font=("Arial", 12)
        )
        self.shipping_days_spinbox.grid(row=11, column=1, sticky="w", pady=(0, 15), padx=PADX_RIGHT)

        # Row 12: 購入期限 (date input) | 関税を含む
        ttk.Label(main_frame, text="購入期限", font=("Arial", 12)).grid(row=12, column=0, sticky="w", pady=(0, 5), padx=PADX_LEFT)
        ttk.Label(main_frame, text="関税", font=("Arial", 12)).grid(row=12, column=1, sticky="w", pady=(0, 5), padx=PADX_RIGHT)
        self.purchase_deadline_var = tk.StringVar()
        self.purchase_deadline_entry = DateEntry(main_frame, textvariable=self.purchase_deadline_var, width=47, font=("Arial", 12), date_pattern="yyyy/mm/dd")
        self.purchase_deadline_entry.grid(row=13, column=0, sticky="we", pady=PADY, padx=PADX_LEFT)
        self.include_tax_var = tk.BooleanVar(value=True)
        self.include_tax_cb = ttk.Checkbutton(main_frame, text="関税を含む", variable=self.include_tax_var)
        self.include_tax_cb.grid(row=13, column=1, sticky="w", pady=PADY, padx=PADX_RIGHT)

        # Row 14: BUYMA手数料 | 利益
        ttk.Label(main_frame, text="BUYMA手数料", font=("Arial", 12)).grid(row=14, column=0, sticky="w", pady=(0, 5), padx=PADX_LEFT)
        ttk.Label(main_frame, text="利益", font=("Arial", 12)).grid(row=14, column=1, sticky="w", pady=(0, 5), padx=PADX_RIGHT)
        
        self.buyma_fee_var = tk.DoubleVar(value=1.7)
        self.buyma_fee_spinbox = tk.Spinbox(
            main_frame, from_=0.0, to=100.0, increment=0.1, textvariable=self.buyma_fee_var, width=10, font=("Arial", 12)
        )
        self.buyma_fee_spinbox.grid(row=15, column=0, sticky="w", pady=PADY, padx=PADX_LEFT)
        
        self.profit_var = tk.DoubleVar(value=1.5)
        self.profit_spinbox = tk.Spinbox(
            main_frame, from_=0.0, to=1000.0, increment=0.1, textvariable=self.profit_var, width=10, font=("Arial", 12)
        )
        self.profit_spinbox.grid(row=15, column=1, sticky="w", pady=PADY, padx=PADX_RIGHT)
        
       
        # Add this after self.bg_file_btn and self.complete_btn
        self.bg_image_label = ttk.Label(main_frame)
        self.bg_image_label.grid(row=16, column=0, columnspan=2, pady=(0, 10))
        
        # Row 17: File input for background image | 設定完了ボタン
        self.bg_path = None
        self.bg_file_label = ttk.Label(main_frame, text="未選択", width=30)
        self.bg_file_label.grid(row=17, column=0, sticky="w", pady=(15, 0), padx=PADX_LEFT)
        self.bg_file_btn = ttk.Button(main_frame, text="背景画像を選択", command=self.select_bg_file, width=16)
        self.bg_file_btn.grid(row=17, column=0, sticky="e", pady=(15, 0), padx=(0, 150))
        self.complete_btn = ttk.Button(main_frame, text="設定完了", command=self.on_complete, width=16)
        self.complete_btn.grid(row=17, column=1, sticky="e", pady=(15, 0), padx=PADX_RIGHT)

        # Row 18: Terminal showing area
        ttk.Label(main_frame, text="ターミナル出力", font=("Arial", 12)).grid(row=18, column=0, columnspan=2, sticky="w", pady=(20, 5), padx=PADX_LEFT)
        
        # Create a frame for the terminal area with scrollbars
        terminal_frame = ttk.Frame(main_frame)
        terminal_frame.grid(row=19, column=0, columnspan=2, sticky="nsew", pady=(0, 20), padx=PADX_LEFT)
        
        # Create the text widget for terminal output
        self.terminal_text = tk.Text(terminal_frame, height=8, width=80, font=("Consolas", 10), bg="white", fg="black")
        
        # Create scrollbars
        terminal_y_scroll = ttk.Scrollbar(terminal_frame, orient="vertical", command=self.terminal_text.yview)
        terminal_x_scroll = ttk.Scrollbar(terminal_frame, orient="horizontal", command=self.terminal_text.xview)
        
        # Configure the text widget to use scrollbars
        self.terminal_text.configure(yscrollcommand=terminal_y_scroll.set, xscrollcommand=terminal_x_scroll.set)
        
        # Grid placement for terminal area
        self.terminal_text.grid(row=0, column=0, sticky="nsew")
        terminal_y_scroll.grid(row=0, column=1, sticky="ns")
        terminal_x_scroll.grid(row=1, column=0, sticky="ew")
        
        # Configure resizing for terminal frame
        terminal_frame.rowconfigure(0, weight=1)
        terminal_frame.columnconfigure(0, weight=1)
        
        # Configure main frame to expand the terminal area
        main_frame.rowconfigure(19, weight=1)
        
        # self.hermes_category_listbox = tk.Listbox(main_frame, selectmode="multiple", width=50, height=8, exportselection=False)
        # for item in self.hermes_filter:
        #     self.hermes_category_listbox.insert(tk.END, item)
        # self.hermes_category_listbox.grid(row=5, column=1, sticky="we", pady=PADY, padx=PADX_RIGHT)
        # self.hermes_category_listbox.selection_set(0)  # Optionally select the first item by default

        # Row 16: 商品コメント (left), Background image preview (right)
        ttk.Label(main_frame, text="商品コメント", font=("Arial", 12)).grid(
            row=16, column=0, sticky="nw", pady=(0, 5), padx=PADX_LEFT
        )
        self.product_comment_text = tk.Text(main_frame, width=40, height=5, font=("Arial", 12))
        self.product_comment_text.grid(row=16, column=0, sticky="we", pady=(25, 10), padx=PADX_LEFT)

        self.bg_image_label = ttk.Label(main_frame)
        self.bg_image_label.grid(row=16, column=1, pady=(0, 10), padx=PADX_RIGHT)

        # Add scroll indicator for macOS users
        self.create_scroll_indicator(canvas)
        
        # Store canvas reference for debugging
        self.canvas = canvas
        
    def create_scroll_indicator(self, canvas):
        """Create a scroll indicator for macOS users"""
        # Create indicator frame
        indicator_frame = ttk.Frame(self.root)
        indicator_frame.pack(side="bottom", fill="x", padx=5, pady=2)
        
        # Scroll instructions
        self.scroll_indicator = ttk.Label(indicator_frame, 
                                        text="↓ スクロール: マウスホイール / キーボード矢印キー / スクロールバー ↓", 
                                        font=("Arial", 9), foreground="blue")
        self.scroll_indicator.pack()
        
        # Function to update scroll indicator
        def update_scroll_indicator():
            try:
                scroll_pos = canvas.yview()
                if scroll_pos[0] == 0.0:
                    self.scroll_indicator.config(text="↓ スクロールしてすべての内容を表示 ↓")
                elif scroll_pos[1] == 1.0:
                    self.scroll_indicator.config(text="↑ 上にスクロールして戻る ↑")
                else:
                    self.scroll_indicator.config(text="↕ スクロール中... ↕")
            except:
                pass
            
            # Schedule next update
            self.root.after(200, update_scroll_indicator)
            
        # Start scroll indicator updates
        update_scroll_indicator()
        
    def scroll_to_top(self):
        """Scroll to the top of the content"""
        if hasattr(self, 'canvas'):
            self.canvas.yview_moveto(0.0)
            
    def scroll_to_bottom(self):
        """Scroll to the bottom of the content"""
        if hasattr(self, 'canvas'):
            self.canvas.yview_moveto(1.0)

    def write_to_terminal(self, text):
        """Write text to the terminal and scroll to bottom"""
        if not hasattr(self, 'terminal_text') or self.terminal_text is None:
            print(f"Terminal not initialized: {text}")
            return
        self.terminal_text.insert("end", text + "\n")
        self.terminal_text.see("end")  # Scroll to bottom
        self.root.update_idletasks()  # Update the GUI

    def clear_terminal(self):
        """Clear the terminal area"""
        self.terminal_text.delete(1.0, "end")

    def log_info(self, message):
        """Log info message with timestamp"""
        timestamp = datetime.datetime.now().strftime("%H:%M:%S")
        log_message = f"[{timestamp}] INFO: {message}"
        self.write_to_terminal(log_message)

    def log_error(self, message):
        """Log error message with timestamp"""
        timestamp = datetime.datetime.now().strftime("%H:%M:%S")
        log_message = f"[{timestamp}] ERROR: {message}"
        self.write_to_terminal(log_message)

    def log_warning(self, message):
        """Log warning message with timestamp"""
        timestamp = datetime.datetime.now().strftime("%H:%M:%S")
        log_message = f"[{timestamp}] WARNING: {message}"
        self.write_to_terminal(log_message)

    def log_success(self, message):
        """Log success message with timestamp"""
        timestamp = datetime.datetime.now().strftime("%H:%M:%S")
        log_message = f"[{timestamp}] SUCCESS: {message}"
        self.write_to_terminal(log_message)

    def log_progress(self, message):
        """Log progress message with timestamp"""
        timestamp = datetime.datetime.now().strftime("%H:%M:%S")
        log_message = f"[{timestamp}] PROGRESS: {message}"
        self.write_to_terminal(log_message)

    def demonstrate_logging(self):
        """Demonstrate real-time logging functionality"""
        
        def demo_logs():
            self.log_info("Starting demonstration of logging functionality...")
            time.sleep(1)
            self.log_progress("Loading configuration...")
            time.sleep(0.5)
            self.log_progress("Validating settings...")
            time.sleep(0.5)
            self.log_success("Configuration loaded successfully!")
            time.sleep(0.5)
            self.log_info("Processing data...")
            time.sleep(0.5)
            self.log_warning("Some items may need attention")
            time.sleep(0.5)
            self.log_error("Error: Connection timeout")
            time.sleep(0.5)
            self.log_info("Retrying connection...")
            time.sleep(0.5)
            self.log_success("Connection established!")
            time.sleep(0.5)
            self.log_info("Demonstration completed.")
        
        # Run demo in a separate thread to avoid blocking the GUI
        demo_thread = threading.Thread(target=demo_logs)
        demo_thread.daemon = True
        demo_thread.start()

    def select_bg_file(self):
        print("file input")
        try:
            print("Opening file dialog...")
            
            # Platform-specific file dialog configuration for macOS
            import platform
            if platform.system() == "Darwin":  # macOS
                print("Detected macOS, using macOS-specific file dialog")
                try:
                    # macOS-specific file dialog options
                    file_path = filedialog.askopenfilename(
                        filetypes=[
                            ("Image files", "*.png *.jpg *.jpeg *.bmp *.gif"),
                            ("PNG files", "*.png"),
                            ("JPEG files", "*.jpg *.jpeg"),
                            ("All files", "*.*")
                        ],
                        title="背景画像を選択",
                        initialdir=os.path.expanduser("~/Desktop"),  # Start from Desktop on macOS
                    )
                except Exception as e:
                    print(f"macOS file dialog failed, trying fallback: {e}")
                    # Fallback for macOS
                    file_path = filedialog.askopenfilename(
                        filetypes=[("All files", "*.*")],
                        title="背景画像を選択"
                    )
            else:
                # Windows/Linux file dialog
                file_path = filedialog.askopenfilename(
                    filetypes=[("Image files", "*.png;*.jpg;*.jpeg;*.bmp;*.gif")],
                    title="背景画像を選択"
                )
            
            print(f"File dialog result: {file_path}")
            
            if file_path and file_path.strip():  # Check if file_path is not empty
                print("Processing selected file...")
                self.bg_path = file_path
                import os
                filename = os.path.basename(file_path)
                print(f"Filename: {filename}")
                
                # Update the label text safely
                try:
                    self.bg_file_label.config(text=filename)
                    print("Label text updated")
                except Exception as e:
                    print(f"Error updating label text: {e}")
                
                # Load and display the image with better error handling
                try:
                    print("Loading image...")
                    img = Image.open(file_path)
                    print("Image loaded, creating thumbnail...")
                    
                    # Create thumbnail with aspect ratio preservation
                    img.thumbnail((300, 200), Image.Resampling.LANCZOS)
                    print("Creating PhotoImage...")
                    self.bg_img_tk = ImageTk.PhotoImage(img)
                    print("PhotoImage created, updating label...")
                    
                    # Create the label if it doesn't exist
                    if not hasattr(self, 'bg_image_label'):
                        print("Creating bg_image_label...")
                        self.bg_image_label = ttk.Label(self.bg_file_label.master)
                    
                    self.bg_image_label.config(image=self.bg_img_tk)
                    self.bg_image_label.grid(row=16, column=1, pady=(0, 10), padx=(30, 0))
                    print("Image display updated successfully")
                    
                except Exception as e:
                    print(f"Error loading image: {e}")
                    import traceback
                    traceback.print_exc()
                    self.bg_path = None
                    try:
                        self.bg_file_label.config(text="画像読み込みエラー")
                    except Exception as e2:
                        print(f"Error updating error label: {e2}")
            else:
                print("No file selected")
                self.bg_path = None
                try:
                    self.bg_file_label.config(text="未選択")
                except Exception as e:
                    print(f"Error updating 'no selection' label: {e}")
                
                # Remove the image label from the grid if it exists
                if hasattr(self, 'bg_image_label'):
                    try:
                        self.bg_image_label.grid_remove()
                    except Exception as e:
                        print(f"Error removing image label: {e}")
                        
        except Exception as e:
            print(f"Error in select_bg_file: {e}")
            import traceback
            traceback.print_exc()
            # Set a safe fallback
            self.bg_path = None
            try:
                self.bg_file_label.config(text="エラーが発生しました")
            except:
                pass

    def on_complete(self):
        # Example: print the selected values
        pretitle = self.title_var.get()
        # model_line = self.model_line_var.get()
        special_gender = self.gender_special_var.get()
        special_category = self.category_special_var.get()
        brand_special_indices = self.brand_special_listbox.curselection()
        special_brand = [self.special_brands[i] for i in brand_special_indices]
        # hermes_category_indices = self.hermes_category_listbox.curselection()
        # hermes_category = [self.hermes_filter[i] for i in hermes_category_indices]
        purchased_place = self.purchased_place_var.get()
        delivery_location = self.delivery_location_var.get()
        season = self.season_var.get()
        tag = self.tag_var.get()
        shipping_method = self.shipping_method_var.get()
        shipping_days = self.shipping_days_var.get()
        purchase_deadline = self.purchase_deadline_var.get()
        buyma_fee = self.buyma_fee_var.get()
        profit = self.profit_var.get()
        include_tax = self.include_tax_var.get()
        product_comment = self.product_comment_text.get("1.0", "end-1c")

        if not pretitle:
            messagebox.showerror("警告", "タイトル開始文字を選択してください。")
        elif special_gender:
                if len(special_brand) == 0:
                    messagebox.showerror("警告", "ブランド(specialshop)を選択してください。")
                elif not special_category:
                        messagebox.showerror("警告", "カテゴリー(specialshop)を選択してください。")
        elif len(special_brand) == 0 or special_category:
                messagebox.showerror("警告", "カテゴリー(specialshop)を選択してください。")
        
        # elif len(hermes_category_indices) == 0 :
        #         messagebox.showerror("警告", "カテゴリー(HERMES)を選択してください。")
        
            
        elif not purchased_place:
            messagebox.showerror("警告", "買付地を選択してください。")
            
        elif not delivery_location:
            messagebox.showerror("警告", "発送地を選択してください。")
        elif not season:
            messagebox.showerror("警告", "シーズンを選択してください。")
        elif not tag:
            messagebox.showerror("警告", "タグを選択してください。")
        elif not shipping_method:
            messagebox.showerror("警告", "配送方法を選択してください。")
        elif not shipping_days:
            messagebox.showerror("警告", "発送までの日数を入力してください。")   
        
        # print("hermes_category", hermes_category)
        print("special_brand", special_brand)
        
        set_value = {
            "pretitle": pretitle,
            # "model_line": model_line,
            "special_gender": special_gender,
            "special_brand": brand_special_indices,
            "special_category":  self.special_categories.index(special_category)-1,
            # "hermes_category": hermes_category_indices,
            "purchased_place": purchased_place,
            "delivery_location": delivery_location,
            "season": season,
            "tag": tag,
            "shipping_method": shipping_method,
            "shipping_days": shipping_days,
            "purchase_deadline": purchase_deadline,
            "buyma_fee": buyma_fee,
            "profit": profit,
            "include_tax": include_tax,
            "comment": product_comment,
            "bg_path": self.bg_path
        }
        
        self.log_success("設定完了！メイン画面に移動します...")
        
        if self.parent:
            self.parent.scraping_init(set_value, logging=self.log_info)  # If parent has this method
            # Don't destroy the root window - let the parent handle the transition
            print("Settings completed, transitioning to main page...")
            self.parent.show_main_page()
            
    def test_file_dialog(self):
        """Test file dialog functionality for debugging"""
        try:
            import platform
            print(f"Platform: {platform.system()}")
            print(f"Python version: {platform.python_version()}")
            
            # Test basic file dialog
            print("Testing basic file dialog...")
            test_path = filedialog.askopenfilename(
                title="Test File Dialog",
                filetypes=[("Text files", "*.txt"), ("All files", "*.*")]
            )
            print(f"Test result: {test_path}")
            
        except Exception as e:
            print(f"File dialog test failed: {e}")
            import traceback
            traceback.print_exc()
